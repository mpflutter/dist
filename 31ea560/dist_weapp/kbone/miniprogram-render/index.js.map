{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/cache.js","webpack:///./src/util/pool.js","webpack:///./src/util/tool.js","webpack:///./src/node/element.js","webpack:///./src/event/event.js","webpack:///./src/node/node.js","webpack:///./src/event/event-target.js","webpack:///./src/document.js","webpack:///./src/event/custom-event.js","webpack:///./src/node/class-list.js","webpack:///./src/node/style.js","webpack:///./src/node/attribute.js","webpack:///./src/node/text-node.js","webpack:///./src/node/comment.js","webpack:///./src/index.js","webpack:///./src/window.js","webpack:///./src/tree/tree.js","webpack:///./src/node/style-list.js","webpack:///./src/node/element/a.js","webpack:///./src/node/element/image.js","webpack:///./src/node/element/input.js","webpack:///./src/node/element/textarea.js","webpack:///./src/node/element/video.js","webpack:///./src/node/element/canvas.js","webpack:///./src/node/element/select.js","webpack:///./src/node/element/option.js","webpack:///./src/node/element/not-support.js","webpack:///./src/node/element/wx-component.js","webpack:///./src/node/element/wx-custom-component.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pageMap","configCache","cookieCache","init","pageId","options","window","document","nodeIdMap","destroy","getDocument","getWindow","getWindowList","keys","map","setNode","nodeId","domNode","parentNode","body","getNode","setConfig","config","getConfig","getCookie","size","this","$_size","$_cache","length","push","pop","cache","WX_COMPONENT_MAP","forEach","seed","Date","waitFuncSet","Set","NOT_SUPPORT_TAG_NAME_LIST","checkIsWxComponent","tagName","notNeedPrefix","hasPrefix","indexOf","slice","toDash","str","replace","all","toLowerCase","toCamel","$1","toUpperCase","getId","getPageRoute","split","getPageName","pageRoute","pluginMatchRes","match","splitPageRoute","throttle","func","has","add","Promise","resolve","then","delete","catch","console","error","flushThrottleCache","waitFunc","clear","completeURL","url","defaultOrigin","notTransHttps","origin","decodeContent","content","isTagNameSupport","escapeForHtmlGeneration","setData","instance","data","_startInit","_iniCount","$$trigger","Node","ClassList","Style","Attribute","tool","pool","Element","tree","optimization","elementMultiplexing","$$init","type","super","$_tagName","$_children","$_nodeType","nodeType","ELEMENT_NODE","$_notTriggerUpdate","$_dataset","$_classList","$_style","$_attrs","$$scrollTop","$$scrollTimeStamp","$_initAttrs","attrs","onclick","ontouchstart","ontouchmove","ontouchend","ontouchcancel","onload","onerror","$$destroy","$_unary","_wxComponent","_wxCustomComponent","child","$$recycle","$__dataset","$__classList","$$create","$_onClassOrStyleUpdate","$__style","$__attrs","$_triggerParentUpdate","attrKeys","datasetName","substr","setAttribute","triggerUpdate","$_triggerWindowUpdate","$_pageId","node","isRemove","id","$$nodeId","$_tree","updateIdMap","childNodes","$_updateChildrenExtra","$$pageId","$_type","className","style","cssText","slot","getAttribute","html","reject","$$createSelectorQuery","selectViewport","scrollOffset","res","Error","exec","select","$_nodeId","boundingClientRect","wx","createSelectorQuery","in","$$wxComponent","context","set","args","wxComponent","$$wxCustomComponent","scrollSource","animate","clearAnimation","trim","oldId","getById","toString","$$parse","filter","textContent","text","join","$$updateParent","ownerDocument","$$createTextNode","appendChild","list","parseInt","pageScrollTo","scrollTop","duration","deep","dataset","newNode","$$createElement","class","src","$$dealWithAttrsForCloneNode","attrsMap","attrName","cloneNode","nodes","hasUpdate","DOCUMENT_FRAGMENT_NODE","concat","removeChild","$_triggerMeUpdate","index","splice","ref","insertIndex","old","replaceIndex","getByTagName","getByClassName","selector","query","valueType","undefined","Array","isArray","JSON","parse","oldValue","oldKeys","removeAttribute","handler","removeEventListener","addEventListener","remove","namespace","warn","hasAttribute","otherElement","stack","checkElement","$$getBoundingClientRect","Event","$_name","$_target","target","$_timeStamp","timeStamp","now","$_currentTarget","currentTarget","$_eventPhase","eventPhase","NONE","$_detail","detail","$_immediateStop","$_canBubble","$_bubbles","bubbles","$_touches","$_targetTouches","$_changedTouches","$_cancelable","$_preventDefault","extra","$$extra","touches","touch","$$checkTargetTouches","changedTouches","node1","node2","checkRelation","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","EventTarget","$_parentNode","len","TEXT_NODE","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","CustomEvent","compareTouchList","a","b","aItem","bItem","identifier","pageX","pageY","clientX","clientY","oninput","onfocus","onblur","onchange","$_miniprogramEvent","$_eventHandlerMap","$__eventHandlerMap","eventName","miniprogramEvent","callback","event","$$setTarget","path","assign","$$canBubble","behavior","$$setCurrentTarget","$$setEventPhase","isCapture","isTarget","stopPropagation","isInit","handlerMap","handlerObj","capture","bubble","handlers","$_getHandlers","onEventName","$$immediateStop","returnValue","err","$$triggerWindowError","_namespace","namespaceHandlers","last","flag","$$namespace","bubbleHandlers","captureHandlers","defaultView","evt","$$process","Tree","TextNode","Comment","A","Image","Input","Textarea","Video","Canvas","Select","Option","NotSupport","WxComponent","WxCustomComponent","CONSTRUCTOR_MAP","IMG","INPUT","TEXTAREA","VIDEO","CANVAS","SELECT","OPTION","WX_COMPONENT_TRANSFORM_LIST","WX_CUSTOM_COMPONENT_MAP","transformWxComponent2Dom","wxComponentName","groupEvent","element","$$isGroup","stopImmediatePropagation","querySelectorAll","item","checked","runtime","cookieStore","usingComponents","pageName","that","$_imageConstructor","width","height","unary","children","$_config","$_node","$_head","createElement","root","$$children","cookie","getStorageSync","$$cookieInstance","deserialize","$_visibilityState","documentElement","originTagName","constructorClass","$$notNeedPrefix","componentName","start","startSplit","nextSplit","cookies","lastSplitStr","substring","splitStr","test","location","href","$$createComment","dispatchEvent","Pool","onUpdate","domExtendMultiplexing","$_doUpdate","isUpdate","force","isNotContain","action","styleList","$_disableCheckUpdate","joinText","styleText","rules","rule","$_checkUpdate","properties","styleValueReduce","defineProperties","$_element","$_map","$_list","attrValueReduce","$$node","idValue","classValue","styleValue","textMultiplexing","$_content","commentMultiplexing","Window","Document","route","$$adapter","OriginalCustomEvent","lastRafTime","WINDOW_PROTOTYPE_MAP","ELEMENT_PROTOTYPE_MAP","attribute","classList","subscribeMap","globalObject","noop","timeOrigin","$_outerHeight","$_outerWidth","$_innerHeight","$_innerWidth","$_nowFetchingWebviewInfoPromise","$_fetchDeviceInfo","$_initInnerEvent","onhashchange","$_elementConstructor","$_customEventConstructor","HTMLIFrameElement","info","getSystemInfoSync","screenHeight","screenWidth","windowHeight","windowWidth","$_screen","$$reset","$_navigator","descriptor","main","sub","method","$_miniprogram","handlersMap","dom","computedStyle","fields","errStack","errLines","message","line","filename","lineno","colno","$$isOfficial","oldOnError","$$getPrototype","$_getAspectInfo","methodInPrototype","$$isHook","beforeFuncs","$$before","afterFuncs","$$after","beforeFunc","apply","afterFunc","$$originalMethod","$_location","$_localStorage","$_sessionStorage","$_history","$$imageConstructor","setTimeout","clearTimeout","setInterval","clearInterval","RegExp","Math","Number","Boolean","String","parseFloat","$_performance","$_xmlHttpRequestConstructor","$_workerConstructor","$_sharedWorkerConstructor","pixelRatio","$$open","navigateBack","delta","transitionDelay","transitionDuration","animationDelay","animationDuration","nextRafTime","max","timeId","walkDomTree","tagMap","classMap","idMap","walk","ast","childNode","findNode","HTMLAnchorElement","$_protocol","$_hostname","$_port","$_pathname","$_search","$_hash","$_naturalWidth","$_naturalHeight","$_initRect","widthNum","isNaN","heightNum","rect","isFinite","HTMLInputElement","disabled","maxlength","placeholder","mpplaceholderclass","HTMLTextAreaElement","HTMLVideoElement","HTMLCanvasElement","$$getNodesRef","nodesRef","getContext","createPath2D","createImage","createImageData","requestAnimationFrame","cancelAnimationFrame","toDataURL","HTMLSelectElement","$$resetOptions","$$updateSelected","selectedIndex","option","find","selected","$$setAttributeWithoutUpdate","findIndex","HTMLOptionElement","label","onDealWithNotSupportDom","scrollItem","getElementById","propName","rectName","scrollRect","itemRect","$_behavior","realName"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","const pageMap = {}\nlet configCache = {}\nconst cookieCache = {}\n\n/**\n * 初始化\n */\nfunction init(pageId, options) {\n    pageMap[pageId] = {\n        window: options.window,\n        document: options.document,\n        nodeIdMap: options.nodeIdMap,\n    }\n}\n\n/**\n * 销毁\n */\nfunction destroy(pageId) {\n    delete pageMap[pageId]\n}\n\n/**\n * 获取 document\n */\nfunction getDocument(pageId) {\n    return pageMap[pageId] && pageMap[pageId].document\n}\n\n/**\n * 获取 window\n */\nfunction getWindow(pageId) {\n    return pageMap[pageId] && pageMap[pageId].window\n}\n\n/**\n * 获取 window 列表\n */\nfunction getWindowList() {\n    return Object.keys(pageMap).map(pageId => pageMap[pageId].window)\n}\n\n/**\n * 存储 domNode 映射\n */\nfunction setNode(pageId, nodeId, domNode = null) {\n    const document = pageMap[pageId] && pageMap[pageId].document\n\n    // 运行前调用，不做任何操作\n    if (!document) return\n    // 相当于删除映射\n    if (!domNode) return pageMap[pageId].nodeIdMap[nodeId] = domNode\n\n    let parentNode = domNode.parentNode\n\n    while (parentNode && parentNode !== document.body) {\n        parentNode = parentNode.parentNode\n    }\n\n    pageMap[pageId].nodeIdMap[nodeId] = parentNode === document.body ? domNode : null\n}\n\n/**\n * 根据 nodeId 获取 domNode\n */\nfunction getNode(pageId, nodeId) {\n    return pageMap[pageId] && pageMap[pageId].nodeIdMap[nodeId]\n}\n\n/**\n * 存储全局 config\n */\nfunction setConfig(config) {\n    configCache = config\n}\n\n/**\n * 获取全局 config\n */\nfunction getConfig() {\n    return configCache\n}\n\n/**\n * 获取全局 cookie\n */\nfunction getCookie() {\n    return cookieCache\n}\n\nmodule.exports = {\n    init,\n    destroy,\n    getDocument,\n    getWindow,\n    getWindowList,\n    setNode,\n    getNode,\n    setConfig,\n    getConfig,\n    getCookie,\n}\n","class Pool {\r\n    constructor(size) {\r\n        this.$_size = size || 3000\r\n        this.$_cache = []\r\n    }\r\n\r\n    /**\r\n     * 添加一个对象\r\n     */\r\n    add(object) {\r\n        if (this.$_cache.length >= this.$_size) return\r\n\r\n        this.$_cache.push(object)\r\n    }\r\n\r\n    /**\r\n     * 取出一个对象\r\n     */\r\n    get() {\r\n        return this.$_cache.pop()\r\n    }\r\n}\r\n\r\nmodule.exports = Pool\r\n","const cache = require('./cache')\n\n/**\n * 判断是否是内置组件\n */\nconst WX_COMPONENT_MAP = {}\nconst WX_COMPONENT_LIST = [\n    'cover-image', 'cover-view', 'match-media', 'movable-area', 'movable-view', 'page-container', 'scroll-view', 'swiper', 'swiper-item', 'view',\n    'icon', 'progress', 'rich-text', 'text',\n    'button', 'checkbox', 'checkbox-group', 'editor', 'form', 'input', 'label', 'picker', 'picker-view', 'picker-view-column', 'radio', 'radio-group', 'slider', 'switch', 'textarea',\n    'functional-page-navigator', 'navigator',\n    'audio', 'camera', 'image', 'live-player', 'live-pusher', 'video', 'voip-room',\n    'map',\n    'canvas',\n    'ad', 'ad-custom', 'official-account', 'open-data', 'web-view',\n    // 特殊补充\n    'capture', 'catch', 'animation'\n]\nWX_COMPONENT_LIST.forEach(name => WX_COMPONENT_MAP[name] = name)\nfunction checkIsWxComponent(tagName, notNeedPrefix) {\n    const hasPrefix = tagName.indexOf('wx-') === 0\n    if (notNeedPrefix) {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : WX_COMPONENT_MAP[tagName]\n    } else {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : false\n    }\n}\n\n/**\n * 驼峰转连字符\n */\nfunction toDash(str) {\n    return str.replace(/[A-Z]/g, all => `-${all.toLowerCase()}`)\n}\n\n/**\n * 连字符转驼峰\n */\nfunction toCamel(str) {\n    return str.replace(/-([a-zA-Z])/g, (all, $1) => $1.toUpperCase())\n}\n\n/**\n * 获取唯一 id\n */\nlet seed = +new Date()\nfunction getId() {\n    return seed++\n}\n\n/**\n * 从 pageId 中获取小程序页面 route\n */\nfunction getPageRoute(pageId) {\n    return pageId.split('-')[2]\n}\n\n/**\n * 从 pageRoute 中获取小程序页面名称\n */\nfunction getPageName(pageRoute) {\n    const pluginMatchRes = pageRoute.match(/(?:^|\\/)__plugin__\\/(?:.*?)(\\/.*)/)\n    if (pluginMatchRes && pluginMatchRes[1]) {\n        // 插件页面的 route 需要特殊处理\n        pageRoute = pluginMatchRes[1]\n    }\n    const splitPageRoute = pageRoute.split('/')\n    return splitPageRoute[1] === 'pages' ? splitPageRoute[2] : splitPageRoute[1]\n}\n\n/**\n * 节流，一个同步流中只调用一次该函数\n */\nconst waitFuncSet = new Set()\nfunction throttle(func) {\n    return () => {\n        if (waitFuncSet.has(func)) return\n\n        waitFuncSet.add(func)\n\n        Promise.resolve().then(() => {\n            if (waitFuncSet.has(func)) {\n                waitFuncSet.delete(func)\n                func()\n            }\n        }).catch(console.error)\n    }\n}\n\n/**\n * 清空节流缓存\n */\nfunction flushThrottleCache() {\n    waitFuncSet.forEach(waitFunc => waitFunc && waitFunc())\n    waitFuncSet.clear()\n}\n\n/**\n * 补全 url\n */\nfunction completeURL(url, defaultOrigin, notTransHttps) {\n    const config = cache.getConfig()\n\n    // 处理 url 前缀\n    if (url.indexOf('//') === 0) {\n        url = 'https:' + url\n    } else if (url[0] === '/') {\n        url = (config.origin || defaultOrigin) + url\n    }\n\n    if (!notTransHttps && url.indexOf('http:') === 0) {\n        url = url.replace(/^http:/ig, 'https:')\n    }\n\n    return url\n}\n\n/**\n * 解码特殊字符\n */\nfunction decodeContent(content) {\n    return content\n        .replace(/&nbsp;/g, '\\u00A0')\n        .replace(/&ensp;/g, '\\u2002')\n        .replace(/&emsp;/g, '\\u2003')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&apos;/g, '\\'')\n        .replace(/&amp;/g, '&')\n}\n\n/**\n * 判断该标签在小程序中是否支持\n */\nconst NOT_SUPPORT_TAG_NAME_LIST = ['IFRAME']\nfunction isTagNameSupport(tagName) {\n    return NOT_SUPPORT_TAG_NAME_LIST.indexOf(tagName) === -1\n}\n\n/**\n * 处理 innerHTML/outerHTML 的属性值过滤\n */\nfunction escapeForHtmlGeneration(value) {\n    return value.replace(/\"/g, '&quot;')\n}\n\n/**\n * setData 封装\n */\nfunction setData(instance, data) {\n    const pageId = instance.pageId\n    const window = pageId ? cache.getWindow(pageId) : null\n    if (window && window._startInit) {\n        // 统计 init 阶段的 setData\n        window._iniCount++\n        instance.setData(data, () => {\n            window._iniCount--\n            if (!window._startInit && window._iniCount <= 0) {\n                // 回调全部回来了\n                window.document.$$trigger('DOMContentLoaded')\n                window._iniCount = 0\n            }\n        })\n        return\n    }\n\n    // 普通 setData\n    instance.setData(data)\n}\n\nmodule.exports = {\n    checkIsWxComponent,\n    toDash,\n    toCamel,\n    getId,\n    getPageRoute,\n    getPageName,\n    throttle,\n    flushThrottleCache,\n    completeURL,\n    decodeContent,\n    isTagNameSupport,\n    escapeForHtmlGeneration,\n    setData,\n}\n","const Node = require('./node')\nconst ClassList = require('./class-list')\nconst Style = require('./style')\nconst Attribute = require('./attribute')\nconst cache = require('../util/cache')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\n\nconst pool = new Pool()\n\nclass Element extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Element(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'element'\n\n        super.$$init(options, tree)\n\n        this.$_tagName = options.tagName || ''\n        this.$_children = []\n        this.$_nodeType = options.nodeType || Node.ELEMENT_NODE\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0 // 最近一次滚动事件触发的时间戳\n\n        this.$_initAttrs(options.attrs)\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onclick = null\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.onload = null\n        this.onerror = null\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_tagName = ''\n        this.$_children.length = 0\n        this.$_nodeType = Node.ELEMENT_NODE\n        this.$_unary = null\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this._wxComponent = null\n        this._wxCustomComponent = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 延迟创建内部属性对象\n     */\n    set $_dataset(value) {\n        this.$__dataset = value\n    }\n\n    get $_dataset() {\n        if (!this.$__dataset) this.$__dataset = Object.create(null)\n        return this.$__dataset\n    }\n\n    set $_classList(value) {\n        if (!value && this.$__classList) this.$__classList.$$recycle()\n        this.$__classList = value\n    }\n\n    get $_classList() {\n        if (!this.$__classList) this.$__classList = ClassList.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__classList\n    }\n\n    set $_style(value) {\n        if (!value && this.$__style) this.$__style.$$recycle()\n        this.$__style = value\n    }\n\n    get $_style() {\n        if (!this.$__style) this.$__style = Style.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__style\n    }\n\n    set $_attrs(value) {\n        if (!value && this.$__attrs) this.$__attrs.$$recycle()\n        this.$__attrs = value\n    }\n\n    get $_attrs() {\n        if (!this.$__attrs) this.$__attrs = Attribute.$$create(this, this.$_triggerParentUpdate.bind(this))\n        return this.$__attrs\n    }\n\n    /**\n     * 初始化属性\n     */\n    $_initAttrs(attrs = {}) {\n        // 防止一开始就创建 $_attrs\n        const attrKeys = Object.keys(attrs)\n        if (!attrKeys.length) return\n\n        this.$_notTriggerUpdate = true // 初始化不触发更新\n\n        attrKeys.forEach(name => {\n            if (name.indexOf('data-') === 0) {\n                // dataset\n                const datasetName = tool.toCamel(name.substr(5))\n                this.$_dataset[datasetName] = attrs[name]\n            } else {\n                // 其他属性\n                this.setAttribute(name, attrs[name])\n            }\n        })\n\n        this.$_notTriggerUpdate = false // 重启触发更新\n    }\n\n    /**\n     * 监听 class 或 style 属性值变化\n     */\n    $_onClassOrStyleUpdate() {\n        if (this.$__attrs) this.$_attrs.triggerUpdate()\n        this.$_triggerParentUpdate()\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode && !this.$_notTriggerUpdate) {\n            this.parentNode.$$trigger('$$childNodesUpdate')\n            this.$_triggerWindowUpdate()\n        }\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$domNodeUpdate')\n    }\n\n    /**\n     * 更新子组件树\n     */\n    $_triggerMeUpdate() {\n        if (!this.$_notTriggerUpdate) {\n            this.$$trigger('$$childNodesUpdate')\n            this.$_triggerWindowUpdate()\n        }\n    }\n\n    /**\n     * 触发全局更新事件\n     */\n    $_triggerWindowUpdate() {\n        const window = cache.getWindow(this.$_pageId)\n        window.$$trigger('$$domTreeUpdate')\n    }\n\n    /**\n     * 更新子节点变动引起的映射表修改\n     */\n    $_updateChildrenExtra(node, isRemove) {\n        const id = node.id\n\n        // 更新 nodeId - dom 映射表\n        if (isRemove) {\n            cache.setNode(this.$_pageId, node.$$nodeId, null)\n        } else {\n            cache.setNode(this.$_pageId, node.$$nodeId, node)\n        }\n\n        // 更新 id - dom 映射表\n        if (id) {\n            if (isRemove) {\n                this.$_tree.updateIdMap(id, null)\n            } else {\n                this.$_tree.updateIdMap(id, node)\n            }\n        }\n\n        if (node.childNodes && node.childNodes.length) {\n            for (const child of node.childNodes) {\n                this.$_updateChildrenExtra(child, isRemove)\n            }\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$$nodeId,\n            pageId: this.$$pageId,\n            type: this.$_type,\n            tagName: this.$_tagName,\n            id: this.id,\n            className: this.className,\n            style: this.$__style ? this.style.cssText : '',\n            slot: this.getAttribute('slot'),\n        }\n    }\n\n    /**\n     * 是否空标签\n     */\n    get $$isUnary() {\n        return this.$_unary\n    }\n\n    /**\n     * 所属小程序自定义组件实例\n     */\n    get $$wxComponent() {\n        return this._wxComponent\n    }\n\n    /**\n     * 如果该节点是第三方自定义组件，返回对应的实例\n     */\n    get $$wxCustomComponent() {\n        return this._wxCustomComponent\n    }\n\n    /**\n     * 获取子节点列表\n     */\n    get $$children() {\n        return this.$_children\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForGenerateHtml(html) {\n        // 具体实现逻辑由子类实现\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML() {\n        // ignore，具体实现逻辑由子类实现\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        // 具体实现逻辑由子类实现\n        return {}\n    }\n\n    /**\n     * 小程序端的 getBoundingClientRect 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.scrollOffset.html\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.boundingClientRect.html\n     */\n    $$getBoundingClientRect() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'BODY') {\n                window.$$createSelectorQuery().selectViewport().scrollOffset(res => (res ? resolve(res) : reject(new Error('body not found in webview')))).exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).boundingClientRect(res => (res ? resolve(res) : reject(new Error('element not found in webview')))).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应小程序组件的 context 对象\n     */\n    $$getContext() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject()))\n                    .exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应节点的 NodesRef 对象\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.html\n     */\n    $$getNodesRef() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                resolve(wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`))\n            } else {\n                resolve(window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`))\n            }\n        })\n    }\n\n    /**\n     * 设置属性，但不触发更新\n     */\n    $$setAttributeWithoutUpdate(name, value) {\n        if (typeof name !== 'string') return\n\n        this.$_notTriggerUpdate = true\n        this.$_attrs.set(name, value)\n        this.$_notTriggerUpdate = false\n    }\n\n    /**\n     * 关键帧/滚动驱动动画接口\n     * https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html\n     */\n    $$animate(...args) {\n        const wxComponent = this.$$wxCustomComponent || this.$$wxComponent\n        if (!wxComponent) {\n            console.error('this element has not been attached yet')\n        } else {\n            if (typeof args[2] === 'object' && args[2].scrollSource) {\n                args[2].scrollSource = `.miniprogram-root >>> ${args[2].scrollSource}`\n            }\n            wxComponent.animate(`.node-${this.$_nodeId}`, ...args)\n        }\n    }\n\n    /**\n     * 关键帧/滚动驱动动画清除接口\n     * https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html\n     */\n    $$clearAnimation(...args) {\n        const wxComponent = this.$$wxCustomComponent || this.$$wxComponent\n        if (!wxComponent) {\n            console.error('this element has not been attached yet')\n        } else {\n            if (typeof args[2] === 'object' && args[2].scrollSource) {\n                args[2].scrollSource = `.miniprogram-root >>> ${args[2].scrollSource}`\n            }\n            wxComponent.clearAnimation(`.node-${this.$_nodeId}`, ...args)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get id() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('id')\n    }\n\n    set id(id) {\n        if (typeof id !== 'string') return\n\n        id = id.trim()\n        const oldId = this.$_attrs.get('id')\n        this.$_attrs.set('id', id)\n\n        if (id === oldId) return\n\n        // 更新 tree\n        if (this.$_tree.getById(oldId) === this) this.$_tree.updateIdMap(oldId, null)\n        if (id) this.$_tree.updateIdMap(id, this)\n        this.$_triggerParentUpdate()\n    }\n\n    get tagName() {\n        return this.$_tagName.toUpperCase()\n    }\n\n    get className() {\n        if (!this.$__classList) return ''\n\n        return this.$_classList.toString()\n    }\n\n    set className(className) {\n        if (typeof className !== 'string') return\n\n        this.$_classList.$$parse(className)\n    }\n\n    get classList() {\n        return this.$_classList\n    }\n\n    get nodeName() {\n        return this.tagName\n    }\n\n    get nodeType() {\n        return this.$_nodeType\n    }\n\n    get childNodes() {\n        return this.$_children\n    }\n\n    get children() {\n        return this.$_children.filter(child => child.nodeType === Node.ELEMENT_NODE)\n    }\n\n    get firstChild() {\n        return this.$_children[0]\n    }\n\n    get lastChild() {\n        return this.$_children[this.$_children.length - 1]\n    }\n\n    get innerText() {\n        // WARN：此处处理成和 textContent 一致，不去判断是否会渲染出来的情况\n        return this.textContent\n    }\n\n    set innerText(text) {\n        this.textContent = text\n    }\n\n    get textContent() {\n        return this.$_children.map(child => child.textContent).join('')\n    }\n\n    set textContent(text) {\n        text = '' + text\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 空串不新增 textNode 节点\n        if (!text) return\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n        const child = this.ownerDocument.$$createTextNode({content: text, nodeId})\n\n        this.appendChild(child)\n    }\n\n    get style() {\n        return this.$_style\n    }\n\n    set style(value) {\n        this.$_style.cssText = value\n    }\n\n    get dataset() {\n        return this.$_dataset\n    }\n\n    get attributes() {\n        return this.$_attrs.list\n    }\n\n    get src() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('src')\n    }\n\n    set src(value) {\n        value = '' + value\n        this.$_attrs.set('src', value)\n    }\n\n    get scrollTop() {\n        // 只有配置了 windowScroll 才能拿到准确值；如果没有配置，则需要通过 document.body.$$getBoundingClientRect 来获取准确值\n        return this.$$scrollTop\n    }\n\n    set scrollTop(value) {\n        if (this.$_tagName !== 'html') return // 只有 document.documentElement 支持设置 scrollTop\n        if (+new Date() - this.$$scrollTimeStamp < 500) return // 为了兼容 mp-webpack-plugin@0.9.14 及以前的版本，在滚动事件触发后的 500ms 内，设置 scrollTop 不予处理\n\n        value = parseInt(value, 10)\n        wx.pageScrollTo({scrollTop: value, duration: 0})\n        this.$$scrollTop = value\n    }\n\n    cloneNode(deep) {\n        const dataset = {}\n        Object.keys(this.$_dataset).forEach(name => {\n            dataset[`data-${tool.toDash(name)}`] = this.$_dataset[name]\n        })\n\n        const newNode = this.ownerDocument.$$createElement({\n            tagName: this.$_tagName,\n            attrs: {\n                id: this.id,\n                class: this.className,\n                style: this.style.cssText,\n                src: this.src,\n\n                ...dataset,\n                ...this.$$dealWithAttrsForCloneNode(),\n            },\n            nodeType: this.$_nodeType,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n\n        // 属性\n        if (this.$__attrs) {\n            const attrsMap = this.$_attrs.map\n            Object.keys(attrsMap).forEach(attrName => newNode.setAttribute(attrName, attrsMap[attrName]))\n        }\n\n        if (deep) {\n            // 深克隆\n            for (const child of this.$_children) {\n                newNode.appendChild(child.cloneNode(deep))\n            }\n        }\n\n        return newNode\n    }\n\n    appendChild(node) {\n        if (!(node instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = [].concat(node.childNodes)\n        } else {\n            nodes = [node]\n        }\n\n        if (!nodes.length) hasUpdate = true // 列表为空也要触发 update，因为可能走 innerHTML 强行置空\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            this.$_children.push(node)\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return node\n    }\n\n    removeChild(node) {\n        if (!(node instanceof Node)) return\n\n        const index = this.$_children.indexOf(node)\n\n        if (index >= 0) {\n            // 已经插入，需要删除\n            this.$_children.splice(index, 1)\n\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n\n            // 触发 webview 端更新\n            this.$_triggerMeUpdate()\n        }\n\n        return node\n    }\n\n    insertBefore(node, ref) {\n        if (!(node instanceof Node)) return\n        if (ref && !(ref instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = 0; i < node.childNodes.length; i++) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            const insertIndex = ref ? this.$_children.indexOf(ref) : -1\n\n            if (insertIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 插入到 ref 之前\n                this.$_children.splice(insertIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return node\n    }\n\n    replaceChild(node, old) {\n        if (!(node instanceof Node) || !(old instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = node.childNodes.length - 1; i >= 0; i--) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        const replaceIndex = this.$_children.indexOf(old)\n        if (replaceIndex !== -1) this.$_children.splice(replaceIndex, 1)\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            if (replaceIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 替换到 old\n                this.$_children.splice(replaceIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n            this.$_updateChildrenExtra(old, true)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return old\n    }\n\n    hasChildNodes() {\n        return this.$_children.length > 0\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this)\n    }\n\n    setAttribute(name, value) {\n        if (typeof name !== 'string') return\n\n        // 保留对象/数组/布尔值/undefined 原始内容，方便处理小程序内置组件的使用\n        const valueType = typeof value\n        if (valueType !== 'object' && valueType !== 'boolean' && valueType !== 'function' && value !== undefined && !Array.isArray(value)) value = '' + value\n\n        if (name === 'kbone-attribute-map' || name === 'kbone-event-map') {\n            value = value || {}\n            if (typeof value === 'string') value = JSON.parse(value) // 确保存入的是对象\n            const oldValue = this.getAttribute(name)\n            const keys = Object.keys(value)\n            const oldKeys = oldValue ? Object.keys(oldValue) : null\n\n            if (name === 'kbone-attribute-map') {\n                // 特殊属性，用于批量设置属性\n                keys.forEach(key => this.setAttribute(key, value[key]))\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        if (!Object.prototype.hasOwnProperty.call(value, key)) this.removeAttribute(key)\n                    })\n                }\n            } else {\n                // 特殊属性，用于批量监听事件\n                const window = cache.getWindow(this.$_pageId)\n\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        // 先删除所有旧的 handler\n                        let handler = oldValue[key]\n                        handler = typeof handler !== 'function' ? window[handler] : handler\n                        this.removeEventListener(key, handler)\n                    })\n                }\n                keys.forEach(key => {\n                    let handler = value[key]\n                    handler = typeof handler !== 'function' ? window[handler] : handler\n                    this.addEventListener(key, handler)\n                })\n            }\n        }\n\n        if (name === 'id') {\n            // id 要提前到此处特殊处理\n            this.id = value\n        } else {\n            this.$_attrs.set(name, value)\n        }\n    }\n\n    getAttribute(name) {\n        if (typeof name !== 'string') return ''\n        if (name.indexOf('data-') === 0) {\n            // dataset 属性\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!this.$__dataset) return undefined\n\n            return this.dataset[datasetName]\n        } else {\n            if (!this.$__attrs) return name === 'id' || name === 'style' || name === 'class' ? '' : undefined\n\n            return this.$_attrs.get(name)\n        }\n    }\n\n    hasAttribute(name) {\n        if (typeof name !== 'string') return false\n        if (!this.$__attrs) return false\n\n        return this.$_attrs.has(name)\n    }\n\n    removeAttribute(name) {\n        if (typeof name !== 'string') return false\n\n        return this.$_attrs.remove(name)\n    }\n\n    setAttributeNS(namespace, name, value) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        this.setAttribute(name, value)\n    }\n\n    getAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.getAttribute(name)\n    }\n\n    hasAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.hasAttribute(name)\n    }\n\n    removeAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.removeAttribute(name)\n    }\n\n    contains(otherElement) {\n        const stack = []\n        let checkElement = this\n\n        while (checkElement) {\n            if (checkElement === otherElement) return true\n\n            const childNodes = checkElement.childNodes\n            if (childNodes && childNodes.length) childNodes.forEach(child => stack.push(child))\n\n            checkElement = stack.pop()\n        }\n\n        return false\n    }\n\n    getBoundingClientRect() {\n        return this.$$getBoundingClientRect()\n    }\n}\n\nmodule.exports = Element\n","/**\n * 检查节点间的关系\n */\nfunction checkRelation(node1, node2) {\n    if (node1 === node2) return true\n\n    while (node1) {\n        if (node1 === node2) return true\n\n        node1 = node1.parentNode\n    }\n\n    return false\n}\n\nclass Event {\n    constructor(options) {\n        this.$_name = options.name.toLowerCase()\n        this.$_target = options.target\n        this.$_timeStamp = options.timeStamp || Date.now()\n        this.$_currentTarget = options.currentTarget || options.target\n        this.$_eventPhase = options.eventPhase || Event.NONE\n        this.$_detail = options.detail || null\n        this.$_immediateStop = false\n        this.$_canBubble = true\n        this.$_bubbles = options.bubbles || false\n        this.$_touches = null\n        this.$_targetTouches = null\n        this.$_changedTouches = null\n        this.$_cancelable = true\n        this.$_preventDefault = false\n\n        // 补充字段\n        const extra = options.$$extra\n        if (extra) {\n            Object.keys(extra).forEach(key => {\n                this[key] = extra[key]\n            })\n        }\n\n        // 处理 touches\n        if (options.touches && options.touches.length) {\n            this.$_touches = options.touches.map(touch => ({...touch, target: options.target}))\n\n            this.$$checkTargetTouches()\n        } else if (options.touches) {\n            this.$_touches = []\n            this.$_targetTouches = []\n        }\n\n        // 处理 changedTouches\n        if (options.changedTouches && options.changedTouches.length) {\n            this.$_changedTouches = options.changedTouches.map(touch => ({...touch, target: options.target}))\n        } else if (options.changedTouches) {\n            this.$_changedTouches = []\n        }\n    }\n\n    /**\n     * 返回事件是否立即停止\n     */\n    get $$immediateStop() {\n        return this.$_immediateStop\n    }\n\n    /**\n     * 返回事件时否还可以冒泡\n     */\n    get $$canBubble() {\n        return this.$_canBubble\n    }\n\n    /**\n     * 返回事件是否阻止默认行为\n     */\n    get $$preventDefault() {\n        return this.$_preventDefault\n    }\n\n    /**\n     * 设置 target\n     */\n    $$setTarget(target) {\n        this.$_target = target\n    }\n\n    /**\n     * 设置 currentTarget\n     */\n    $$setCurrentTarget(currentTarget) {\n        this.$_currentTarget = currentTarget\n        this.$$checkTargetTouches()\n    }\n\n    /**\n     * 设置事件所处阶段\n     */\n    $$setEventPhase(eventPhase) {\n        this.$_eventPhase = eventPhase\n    }\n\n    /**\n     * 检查 targetTouches\n     */\n    $$checkTargetTouches() {\n        if (this.$_touches && this.$_touches.length) {\n            this.$_targetTouches = this.$_touches.filter(touch => checkRelation(touch.target, this.$_currentTarget))\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get bubbles() {\n        return this.$_bubbles\n    }\n\n    get cancelable() {\n        return this.$_cancelable\n    }\n\n    get target() {\n        return this.$_target\n    }\n\n    get currentTarget() {\n        return this.$_currentTarget\n    }\n\n    get eventPhase() {\n        return this.$_eventPhase\n    }\n\n    get type() {\n        return this.$_name\n    }\n\n    get timeStamp() {\n        return this.$_timeStamp\n    }\n\n    get touches() {\n        return this.$_touches\n    }\n\n    get targetTouches() {\n        return this.$_targetTouches\n    }\n\n    get changedTouches() {\n        return this.$_changedTouches\n    }\n\n    set detail(value) {\n        this.$_detail = value\n    }\n\n    get detail() {\n        return this.$_detail\n    }\n\n    get returnValue() {\n        return !this.$_preventDefault\n    }\n\n    set returnValue(value) {\n        if (value !== undefined) {\n            this.$_preventDefault = !value\n        }\n    }\n\n    preventDefault() {\n        // 目前仅支持 a 标签的点击阻止\n        this.$_preventDefault = true\n    }\n\n    stopPropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_canBubble = false\n    }\n\n    stopImmediatePropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_immediateStop = true\n        this.$_canBubble = false\n    }\n\n    initEvent(name = '', bubbles) {\n        if (typeof name !== 'string') return\n\n        this.$_name = name.toLowerCase()\n        this.$_bubbles = bubbles === undefined ? this.$_bubbles : !!bubbles\n    }\n}\n\n// 静态属性\nEvent.NONE = 0\nEvent.CAPTURING_PHASE = 1\nEvent.AT_TARGET = 2\nEvent.BUBBLING_PHASE = 3\n\nmodule.exports = Event\n","const EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nclass Node extends EventTarget {\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init()\n\n        this.$_nodeId = options.nodeId // 唯一标识\n        this.$_type = options.type\n        this.$_parentNode = null\n        this.$_tree = tree\n        this.$_pageId = tree.pageId\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_nodeId = null\n        this.$_type = null\n        this.$_parentNode = null\n        this.$_tree = null\n        this.$_pageId = null\n    }\n\n    /**\n     * 内部 nodeId\n     */\n    get $$nodeId() {\n        return this.$_nodeId\n    }\n\n    /**\n     * 内部 pageId\n     */\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 更新 parentNode\n     */\n    $$updateParent(parentNode = null) {\n        this.$_parentNode = parentNode\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get parentNode() {\n        return this.$_parentNode\n    }\n\n    get nodeValue() {\n        return null\n    }\n\n    get previousSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            return childNodes[index - 1]\n        }\n\n        return null\n    }\n\n    get previousElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            for (let i = index - 1; i >= 0; i--) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get nextSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        return childNodes[index + 1] || null\n    }\n\n    get nextElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index < childNodes.length - 1) {\n            for (let i = index + 1, len = childNodes.length; i < len; i++) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get ownerDocument() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get childNodes() {\n        return []\n    }\n\n    hasChildNodes() {\n        return false\n    }\n\n    remove() {\n        if (!this.parentNode || !this.parentNode.removeChild) return this\n\n        return this.parentNode.removeChild(this)\n    }\n}\n\n// 静态属性\nNode.ELEMENT_NODE = 1\nNode.TEXT_NODE = 3\nNode.CDATA_SECTION_NODE = 4\nNode.PROCESSING_INSTRUCTION_NODE = 7\nNode.COMMENT_NODE = 8\nNode.DOCUMENT_NODE = 9\nNode.DOCUMENT_TYPE_NODE = 10\nNode.DOCUMENT_FRAGMENT_NODE = 11\n\nmodule.exports = Node\n","const Event = require('./event')\nconst CustomEvent = require('./custom-event')\n\n/**\n * 比较 touch 列表\n */\nfunction compareTouchList(a, b) {\n    if (a.length !== b.length) return false\n\n    for (let i, len = a.length; i < len; i++) {\n        const aItem = a[i]\n        const bItem = b[i]\n\n        if (aItem.identifier !== bItem.identifier) return false\n        if (aItem.pageX !== bItem.pageX || aItem.pageY !== bItem.pageY || aItem.clientX !== bItem.clientX || aItem.clientY !== bItem.clientY) return false\n    }\n\n    return true\n}\n\nclass EventTarget {\n    constructor(...args) {\n        this.$$init(...args)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init() {\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.oninput = null\n        this.onfocus = null\n        this.onblur = null\n        this.onchange = null\n\n        this.$_miniprogramEvent = null // 记录已触发的小程序事件\n        this.$_eventHandlerMap = null\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        Object.keys(this).forEach(key => {\n            // 处理 on 开头的属性\n            if (key.indexOf('on') === 0) this[key] = null\n            // 处理外部挂进来的私有的属性\n            if (key[0] === '_') this[key] = null\n            if (key[0] === '$' && (key[1] !== '_' && key[1] !== '$')) this[key] = null\n        })\n\n        this.$_miniprogramEvent = null\n        this.$_eventHandlerMap = null\n    }\n\n    set $_eventHandlerMap(value) {\n        this.$__eventHandlerMap = value\n    }\n\n    get $_eventHandlerMap() {\n        if (!this.$__eventHandlerMap) this.$__eventHandlerMap = Object.create(null)\n        return this.$__eventHandlerMap\n    }\n\n    /**\n     * 触发事件捕获、冒泡流程\n     */\n    static $$process(target, eventName, miniprogramEvent, extra, callback) {\n        let event\n\n        if (eventName instanceof CustomEvent || eventName instanceof Event) {\n            // 传入的是事件对象\n            event = eventName\n            eventName = event.type\n            event.$$setTarget(target)\n        }\n\n        eventName = eventName.toLowerCase()\n\n        const path = [target]\n        let parentNode = target.parentNode\n\n        while (parentNode && parentNode.tagName !== 'HTML') {\n            path.push(parentNode)\n            parentNode = parentNode.parentNode\n        }\n\n        if (path[path.length - 1].tagName === 'BODY') {\n            // 如果最后一个节点是 document.body，则追加 document.documentElement\n            path.push(parentNode)\n        }\n\n        if (!event) {\n            // 此处特殊处理，不直接返回小程序的 event 对象\n            event = new Event({\n                name: eventName,\n                target,\n                timeStamp: miniprogramEvent.timeStamp,\n                touches: miniprogramEvent.touches,\n                changedTouches: miniprogramEvent.changedTouches,\n                bubbles: true, // 默认都可以冒泡\n                $$extra: extra,\n            })\n            // 保留原始事件的 detail\n            if (miniprogramEvent.detail) event.detail = Object.assign({}, miniprogramEvent.detail, event.detail || {})\n        }\n\n        // 捕获\n        for (let i = path.length - 1; i >= 0; i--) {\n            const currentTarget = path[i]\n\n            if (!event.$$canBubble) break // 判定冒泡是否结束\n            if (currentTarget === target) continue\n\n            // wx-capture 节点事件单独触发\n            if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n            event.$$setCurrentTarget(currentTarget)\n            event.$$setEventPhase(Event.CAPTURING_PHASE)\n\n            currentTarget.$$trigger(eventName, {\n                event,\n                isCapture: true,\n            })\n            if (callback) callback(currentTarget, event, true)\n        }\n\n        // 目标\n        if (event.$$canBubble) {\n            event.$$setCurrentTarget(target)\n            event.$$setEventPhase(Event.AT_TARGET)\n\n            // 捕获和冒泡阶段监听的事件都要触发\n            target.$$trigger(eventName, {\n                event,\n                isCapture: true,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, true)\n\n            target.$$trigger(eventName, {\n                event,\n                isCapture: false,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, false)\n        }\n\n        if (event.bubbles) {\n            // 冒泡\n            for (const currentTarget of path) {\n                if (!event.$$canBubble) break // 判定冒泡是否结束\n                if (currentTarget === target) continue\n\n                // wx-capture 节点事件单独触发\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n                event.$$setCurrentTarget(currentTarget)\n                event.$$setEventPhase(Event.BUBBLING_PHASE)\n\n                currentTarget.$$trigger(eventName, {\n                    event,\n                    isCapture: false,\n                })\n                if (callback) callback(currentTarget, event, false)\n\n                // wx-catch 节点事件要结束冒泡\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'catch') event.stopPropagation()\n            }\n        }\n\n        // 重置事件\n        event.$$setCurrentTarget(null)\n        event.$$setEventPhase(Event.NONE)\n\n        return event\n    }\n\n    /**\n     * 获取 handlers\n     */\n    $_getHandlers(eventName, isCapture, isInit) {\n        const handlerMap = this.$_eventHandlerMap\n\n        if (isInit) {\n            const handlerObj = handlerMap[eventName] = handlerMap[eventName] || {}\n\n            handlerObj.capture = handlerObj.capture || []\n            handlerObj.bubble = handlerObj.bubble || []\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        } else {\n            const handlerObj = handlerMap[eventName]\n\n            if (!handlerObj) return null\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        }\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, {\n        event, args = [], isCapture, isTarget\n    } = {}) {\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n        const onEventName = `on${eventName}`\n\n        if (!event) {\n            event = new Event({\n                timeStamp: Date.now(),\n                touches: [],\n                changedTouches: [],\n                name: eventName,\n                target: this,\n                eventPhase: Event.AT_TARGET,\n            })\n        }\n\n        if ((!isCapture || !isTarget) && typeof this[onEventName] === 'function') {\n            // 触发 onXXX 绑定的事件\n            if (event && event.$$immediateStop) return\n            try {\n                event.returnValue = this[onEventName].call(this || null, event, ...args)\n            } catch (err) {\n                console.error(err)\n                this.$$triggerWindowError(err)\n            }\n        }\n\n        if (!handlers) return\n\n        // 触发 addEventListener 绑定的事件\n        if (handlers.length) {\n            [...handlers].forEach(handler => {\n                if (event && event.$$immediateStop) return\n                try {\n                    handler.call(this || null, event, ...args)\n                } catch (err) {\n                    console.error(err)\n                    this.$$triggerWindowError(err)\n                }\n            })\n        }\n\n        // 触发 addEventListener 绑定到命名空间下的事件\n        if (handlers._namespace) {\n            Object.keys(handlers._namespace).forEach(namespace => {\n                const namespaceHandlers = handlers._namespace[namespace]\n                if (namespaceHandlers && namespaceHandlers.length) {\n                    [...namespaceHandlers].forEach(handler => {\n                        if (event && event.$$immediateStop) return\n                        try {\n                            handler.call(this || null, event, ...args)\n                        } catch (err) {\n                            console.error(err)\n                            this.$$triggerWindowError(err)\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    /**\n     * 检查该事件是否可以触发\n     */\n    $$checkEvent(miniprogramEvent) {\n        const last = this.$_miniprogramEvent\n        const now = miniprogramEvent\n\n        let flag = false\n\n        if (!last || last.timeStamp !== now.timeStamp) {\n            // 时间戳不同\n            flag = true\n        } else {\n            if (last.touches && now.touches && !compareTouchList(last.touches, now.touches)) {\n                // 存在不同的 touches\n                flag = true\n            } else if ((!last.touches && now.touches) || (last.touches && !now.touches)) {\n                // 存在一方没有 touches\n                flag = true\n            }\n\n            if (last.changedTouches && now.changedTouches && !compareTouchList(last.changedTouches, now.changedTouches)) {\n                // 存在不同的 changedTouches\n                flag = true\n            } else if ((!last.changedTouches && now.changedTouches) || (last.changedTouches && !now.changedTouches)) {\n                // 存在一方没有 changedTouches\n                flag = true\n            }\n        }\n\n        if (flag) this.$_miniprogramEvent = now\n        return flag\n    }\n\n    /**\n     * 清空某个事件的所有句柄\n     */\n    $$clearEvent(eventName, options) {\n        if (typeof eventName !== 'string') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n\n        if (!handlers) return\n\n        if (handlers.length) handlers.length = 0\n        if (handlers._namespace) handlers._namespace[namespace] = null\n    }\n\n    /**\n     * 是否存在事件句柄，只考虑通过 addEventListener 绑定的句柄\n     */\n    $$hasEventHandler(eventName) {\n        eventName = eventName.toLowerCase()\n        const bubbleHandlers = this.$_getHandlers(eventName, false)\n        const captureHandlers = this.$_getHandlers(eventName, true)\n        return (bubbleHandlers && bubbleHandlers.length) || (captureHandlers && captureHandlers.length)\n    }\n\n    /**\n     * 触发 window error 事件\n     */\n    $$triggerWindowError(err) {\n        const document = this.ownerDocument\n        const window = document ? document.defaultView : null\n        if (window) {\n            window.$$trigger('error', {\n                event: err,\n            })\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    addEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, true)\n\n        if (namespace) {\n            // 存在命名空间\n            handlers._namespace = handlers._namespace || {}\n            handlers._namespace[namespace] = handlers._namespace[namespace] || []\n            handlers._namespace[namespace].push(handler)\n        } else {\n            handlers.push(handler)\n        }\n    }\n\n    removeEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, false)\n\n        if (!handlers) return\n\n        if (namespace) {\n            // 存在命名空间\n            if (!handlers._namespace || !handlers._namespace[namespace]) return\n\n            const index = handlers._namespace[namespace].indexOf(handler)\n            if (index >= 0) handlers._namespace[namespace].splice(index, 1)\n        } else {\n            const index = handlers.indexOf(handler)\n            if (index >= 0) handlers.splice(index, 1)\n        }\n    }\n\n    dispatchEvent(evt) {\n        if (evt instanceof CustomEvent) {\n            EventTarget.$$process(this, evt)\n        }\n\n        // 因为不支持 preventDefault，所以永远返回 true\n        return true\n    }\n}\n\nmodule.exports = EventTarget\n","const EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst Tree = require('./tree/tree')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst A = require('./node/element/a')\nconst Image = require('./node/element/image')\nconst Input = require('./node/element/input')\nconst Textarea = require('./node/element/textarea')\nconst Video = require('./node/element/video')\nconst Canvas = require('./node/element/canvas')\nconst Select = require('./node/element/select')\nconst Option = require('./node/element/option')\nconst NotSupport = require('./node/element/not-support')\nconst WxComponent = require('./node/element/wx-component')\nconst WxCustomComponent = require('./node/element/wx-custom-component')\n\nconst CONSTRUCTOR_MAP = {\n    A,\n    IMG: Image,\n    INPUT: Input,\n    TEXTAREA: Textarea,\n    VIDEO: Video,\n    CANVAS: Canvas,\n    SELECT: Select,\n    OPTION: Option,\n}\nconst WX_COMPONENT_TRANSFORM_LIST = ['checkbox', 'checkbox-group', 'input', 'label', 'radio', 'radio-group', 'textarea', 'canvas'] // 需要从 wx-xxx 转回 xxx 节点\nlet WX_CUSTOM_COMPONENT_MAP = {}\n\n/**\n * 将部分 wx-xxx 组件转换成普通 dom 节点\n */\nfunction transformWxComponent2Dom(wxComponentName, options, tree) {\n    let groupEvent = null\n    if (wxComponentName === 'radio' || wxComponentName === 'checkbox') {\n        options.attrs.type = wxComponentName\n        wxComponentName = 'input'\n    } else if (wxComponentName === 'radio-group' || wxComponentName === 'checkbox-group') {\n        groupEvent = wxComponentName.split('-')[0]\n        wxComponentName = 'div'\n    }\n    options.tagName = wxComponentName\n    delete options.attrs.behavior\n    const normalElement = CONSTRUCTOR_MAP[wxComponentName.toUpperCase()] || Element\n    const element = normalElement.$$create(options, tree)\n\n    if (groupEvent) {\n        // group 组件转成 div，监听底下的表单组件来做处理\n        element.addEventListener('change', evt => {\n            if (!evt.$$isGroup) evt.stopImmediatePropagation()\n        })\n        element.addEventListener(`$$${groupEvent}Change`, evt => {\n            const detail = {}\n            if (groupEvent === 'radio') {\n                (element.querySelectorAll('input[type=radio]') || []).forEach(item => {\n                    if (item !== evt.target) item.setAttribute('checked', false)\n                })\n                detail.value = evt.target.value\n            } else if (groupEvent === 'checkbox') {\n                detail.value = (element.querySelectorAll('input[type=checkbox]') || [])\n                    .filter(item => item.checked)\n                    .map(item => item.value)\n            }\n\n            element.$$trigger('change', {\n                event: new Event({\n                    timeStamp: evt.timeStamp,\n                    touches: evt.touches,\n                    changedTouches: evt.changedTouches,\n                    name: 'change',\n                    target: element,\n                    eventPhase: Event.AT_TARGET,\n                    detail,\n                    $$extra: {$$isGroup: true},\n                }),\n                currentTarget: element,\n            })\n        })\n    }\n\n    return element\n}\n\n\nclass Document extends EventTarget {\n    constructor(pageId, nodeIdMap) {\n        super()\n\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        const cookieStore = runtime.cookieStore\n        WX_CUSTOM_COMPONENT_MAP = runtime.usingComponents || {}\n\n        this.$_pageId = pageId\n        const pageRoute = tool.getPageRoute(pageId)\n        const pageName = tool.getPageName(pageRoute)\n\n        // 用于封装特殊标签和对应构造器\n        const that = this\n        this.$_imageConstructor = function HTMLImageElement(width, height) {\n            return Image.$$create({\n                tagName: 'img',\n                nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                attrs: {},\n                width,\n                height,\n            }, that.$_tree)\n        }\n\n        this.$_pageId = pageId\n        this.$_tree = new Tree(pageId, {\n            type: 'element',\n            tagName: 'body',\n            attrs: {},\n            unary: false,\n            nodeId: 'e-body',\n            children: [],\n        }, nodeIdMap, this)\n        this.$_config = null\n\n        // documentElement\n        this.$_node = this.$$createElement({\n            tagName: 'html',\n            attrs: {},\n            nodeId: `a-${tool.getId()}`, // 运行前生成，使用 a- 前缀\n        })\n        this.$_node.$$updateParent(this) // documentElement 的 parentNode 是 document\n\n        // head 元素\n        this.$_head = this.createElement('head')\n\n        // 更新 body 的 parentNode\n        this.$_tree.root.$$updateParent(this.$_node)\n        this.$_node.$$children.push(this.$_tree.root)\n\n        // 持久化 cookie\n        if (cookieStore !== 'memory' && cookieStore !== 'globalmemory') {\n            try {\n                const key = cookieStore === 'storage' ? `PAGE_COOKIE_${pageName}` : 'PAGE_COOKIE'\n                const cookie = wx.getStorageSync(key)\n                if (cookie) this.$$cookieInstance.deserialize(cookie)\n            } catch (err) {\n                // ignore\n            }\n        }\n    }\n\n    /**\n     * Image 构造器\n     */\n    get $$imageConstructor() {\n        return this.$_imageConstructor\n    }\n\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 创建内置组件的时候是否支持不用前缀写法\n     */\n    get $$notNeedPrefix() {\n        if (!this.$_config) this.$_config = cache.getConfig()\n        return this.$_config && this.$_config.runtime && this.$_config.runtime.wxComponent === 'noprefix'\n    }\n\n    /**\n     * 设置页面显示状态\n     */\n    set $$visibilityState(value) {\n        this.$_visibilityState = value\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options) {\n        this.documentElement.$$trigger(eventName, options)\n    }\n\n    /**\n     * 内部所有节点创建都走此接口，统一把控\n     */\n    $$createElement(options, tree) {\n        const originTagName = options.tagName\n        const tagName = originTagName.toUpperCase()\n        let wxComponentName = null\n        tree = tree || this.$_tree\n\n        const constructorClass = CONSTRUCTOR_MAP[tagName]\n        if (constructorClass) {\n            return constructorClass.$$create(options, tree)\n        } else if (tagName === 'WX-COMPONENT') {\n            options.attrs = options.attrs || {}\n            const behavior = options.attrs.behavior\n            if (behavior && WX_COMPONENT_TRANSFORM_LIST.indexOf(behavior) !== -1) return transformWxComponent2Dom(behavior, options, tree) // 需要转成普通 dom\n            else return WxComponent.$$create(options, tree)\n        // eslint-disable-next-line no-cond-assign\n        } else if (wxComponentName = tool.checkIsWxComponent(originTagName, this.$$notNeedPrefix)) {\n            // 内置组件的特殊写法，转成 wx-component 节点\n            options.attrs = options.attrs || {}\n            if (WX_COMPONENT_TRANSFORM_LIST.indexOf(wxComponentName) !== -1) return transformWxComponent2Dom(wxComponentName, options, tree) // 需要转成普通 dom\n            else {\n                options.tagName = 'wx-component'\n                options.attrs.behavior = wxComponentName\n                return WxComponent.$$create(options, tree)\n            }\n        } else if (WX_CUSTOM_COMPONENT_MAP[originTagName]) {\n            // 自定义组件的特殊写法，转成 wx-custom-component 节点\n            options.tagName = 'wx-custom-component'\n            options.attrs = options.attrs || {}\n            options.componentName = originTagName\n            return WxCustomComponent.$$create(options, tree)\n        } else if (!tool.isTagNameSupport(tagName)) {\n            return NotSupport.$$create(options, tree)\n        } else {\n            return Element.$$create(options, tree)\n        }\n    }\n\n    /**\n     * 内部所有文本节点创建都走此接口，统一把控\n     */\n    $$createTextNode(options, tree) {\n        return TextNode.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 内部所有注释节点创建都走此接口，统一把控\n     */\n    $$createComment(options, tree) {\n        return Comment.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 处理 Set-Cookie 头串\n     */\n    $$setCookie(str) {\n        if (str && typeof str === 'string') {\n            let start = 0\n            let startSplit = 0\n            let nextSplit = str.indexOf(',', startSplit)\n            const cookies = []\n\n            while (nextSplit >= 0) {\n                const lastSplitStr = str.substring(start, nextSplit)\n                const splitStr = str.substr(nextSplit)\n\n                if (/^,\\s*([^,=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.test(splitStr)) {\n                // 分割成功，则上一片是完整 cookie\n                    cookies.push(lastSplitStr)\n                    start = nextSplit + 1\n                }\n\n                startSplit = nextSplit + 1\n                nextSplit = str.indexOf(',', startSplit)\n            }\n\n            // 塞入最后一片 cookie\n            cookies.push(str.substr(start))\n\n            cookies.forEach(cookie => this.cookie = cookie)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeType() {\n        return Node.DOCUMENT_NODE\n    }\n\n    get documentElement() {\n        return this.$_node\n    }\n\n    get body() {\n        return this.$_tree.root\n    }\n\n    get nodeName() {\n        return '#document'\n    }\n\n    get head() {\n        return this.$_head\n    }\n\n    get defaultView() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get URL() {\n        if (this.defaultView) return this.defaultView.location.href\n\n        return ''\n    }\n\n    get visibilityState() {\n        return this.$_visibilityState\n    }\n\n    get hidden() {\n        return this.$_visibilityState === 'visible'\n    }\n\n    get location() {\n        if (this.defaultView) return this.defaultView.location\n\n        return null\n    }\n\n    getElementById(id) {\n        if (typeof id !== 'string') return\n\n        return this.$_tree.getById(id) || null\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this.documentElement)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this.documentElement)\n    }\n\n    getElementsByName(name) {\n        if (typeof name !== 'string') return []\n\n        return this.$_tree.query(`*[name=${name}]`, this.documentElement)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this.documentElement)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this.documentElement)\n    }\n\n    createElement(tagName) {\n        if (typeof tagName !== 'string') return\n\n        tagName = tagName.trim()\n        if (!tagName) return\n\n        return this.$$createElement({\n            tagName,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createElementNS(ns, tagName) {\n        // 不支持真正意义上的 createElementNS，转成调用 createElement\n        return this.createElement(tagName)\n    }\n\n    createTextNode(content) {\n        content = '' + content\n\n        return this.$$createTextNode({\n            content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createComment() {\n        // 忽略注释内容的传入\n        return this.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createDocumentFragment() {\n        return Element.$$create({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        }, this.$_tree)\n    }\n\n    createEvent() {\n        const window = cache.getWindow(this.$_pageId)\n\n        return new window.CustomEvent()\n    }\n\n    addEventListener(eventName, handler, options) {\n        this.documentElement.addEventListener(eventName, handler, options)\n    }\n\n    removeEventListener(eventName, handler, isCapture) {\n        this.documentElement.removeEventListener(eventName, handler, isCapture)\n    }\n\n    dispatchEvent(evt) {\n        this.documentElement.dispatchEvent(evt)\n    }\n}\n\nmodule.exports = Document\n","const Event = require('./event')\n\nclass CustomEvent extends Event {\n    constructor(name = '', options = {}) {\n        super({\n            name,\n            ...options,\n        })\n    }\n}\n\nmodule.exports = CustomEvent\n","/**\n * babel extends 无法直接继承 Array，所以换种方法来继承：https://babeljs.io/docs/en/caveats/#classes\n */\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nfunction ClassList(onUpdate) {\n    this.$$init(onUpdate)\n}\n\n/**\n * 创建实例\n */\nClassList.$$create = function(onUpdate) {\n    const config = cache.getConfig()\n\n    if (config.optimization.domExtendMultiplexing) {\n    // 复用 dom 扩展对象\n        const instance = pool.get()\n\n        if (instance) {\n            instance.$$init(onUpdate)\n            return instance\n        }\n    }\n\n    return new ClassList(onUpdate)\n}\n\nClassList.prototype = Object.assign([], {\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate\n    },\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.length = 0\n    },\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    },\n\n    /**\n     * 解析 className\n     */\n    $$parse(className = '') {\n        this.length = 0 // 置空当前内容\n\n        className = className.trim()\n        className = className ? className.split(/\\s+/) : []\n\n        for (const item of className) {\n            this.push(item)\n        }\n\n        this.$_doUpdate()\n    },\n\n    /**\n     * 对外属性和方法\n     */\n    item(index) {\n        return this[index]\n    },\n\n    contains(className) {\n        if (typeof className !== 'string') return false\n\n        return this.indexOf(className) !== -1\n    },\n\n    add(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (className && this.indexOf(className) === -1) {\n                this.push(className)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    remove(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (!className) continue\n\n            const index = this.indexOf(className)\n            if (index >= 0) {\n                this.splice(index, 1)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    toggle(className, force) {\n        if (typeof className !== 'string') return false\n\n        className = className.trim()\n\n        if (!className) return false\n\n        const isNotContain = this.indexOf(className) === -1\n        let action = isNotContain ? 'add' : 'remove'\n        action = force === true ? 'add' : force === false ? 'remove' : action\n\n        if (action === 'add') {\n            this.add(className)\n        } else {\n            this.remove(className)\n        }\n\n        return force === true || force === false ? force : isNotContain\n    },\n\n    toString() {\n        return this.join(' ')\n    },\n})\n\nmodule.exports = ClassList\n","const styleList = require('./style-list')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\n/**\n * 解析样式串\n */\nfunction parse(styleText) {\n    const rules = {}\n\n    if (styleText) {\n        styleText = tool.decodeContent(styleText)\n        styleText = styleText.replace(/url\\([^)]+\\)/ig, all => all.replace(/;/ig, ':#||#:')) // 先处理值里面的分号\n        styleText.split(';').forEach(rule => {\n            rule = rule.trim()\n            if (!rule) return\n\n            const split = rule.indexOf(':')\n            if (split === -1) return\n\n            const name = tool.toCamel(rule.substr(0, split).trim())\n            rules[name] = rule.substr(split + 1).replace(/:#\\|\\|#:/ig, ';').trim()\n        })\n    }\n\n    return rules\n}\n\nclass Style {\n    constructor(onUpdate) {\n        this.$$init(onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(onUpdate)\n                return instance\n            }\n        }\n\n        return new Style(onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate || (() => {})\n        this.$_disableCheckUpdate = false // 是否禁止检查更新\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.$_disableCheckUpdate = false\n\n        styleList.forEach(name => {\n            this[`$_${name}`] = undefined\n        })\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 检查更新\n     */\n    $_checkUpdate() {\n        if (!this.$_disableCheckUpdate) {\n            this.$_doUpdate()\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get cssText() {\n        const joinText = styleList.filter(name => this[`$_${name}`]).map(name => `${tool.toDash(name)}:${this['$_' + name]}`).join(';').trim()\n        return joinText ? `${joinText};` : ''\n    }\n\n    set cssText(styleText) {\n        if (typeof styleText !== 'string') return\n\n        styleText = styleText.replace(/\"/g, '\\'')\n\n        // 解析样式\n        const rules = parse(styleText)\n\n        this.$_disableCheckUpdate = true // 将每条规则的设置合并为一次更新\n        for (const name of styleList) {\n            this[name] = rules[name]\n        }\n        this.$_disableCheckUpdate = false\n        this.$_checkUpdate()\n    }\n\n    getPropertyValue(name) {\n        if (typeof name !== 'string') return ''\n\n        name = tool.toCamel(name)\n        return this[name] || ''\n    }\n}\n\n/**\n * 设置各个属性的 getter、setter\n */\nconst properties = {}\nstyleList.forEach(name => {\n    properties[name] = {\n        get() {\n            return this[`$_${name}`] || ''\n        },\n        set(value) {\n            const config = cache.getConfig()\n            const oldValue = this[`$_${name}`]\n            value = value !== undefined ? '' + value : undefined\n\n            // 判断 value 是否需要删减\n            if (value && config.optimization.styleValueReduce && value.length > config.optimization.styleValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.styleValueReduce}`)\n                value = undefined\n            }\n\n            this[`$_${name}`] = value\n            if (oldValue !== value) this.$_checkUpdate()\n        },\n    }\n})\nObject.defineProperties(Style.prototype, properties)\n\nmodule.exports = Style\n","const Pool = require('../util/pool')\nconst cache = require('../util/cache')\nconst tool = require('../util/tool')\n\nconst pool = new Pool()\n\nclass Attribute {\n    constructor(element, onUpdate) {\n        this.$$init(element, onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(element, onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(element, onUpdate)\n                return instance\n            }\n        }\n\n        return new Attribute(element, onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(element, onUpdate) {\n        this.$_element = element\n        this.$_doUpdate = onUpdate\n        this.$_map = {}\n        this.$_list = []\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_element = null\n        this.$_doUpdate = null\n        this.$_map = null\n        this.$_list = null\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 属性映射表\n     */\n    get map() {\n        return this.$_map\n    }\n\n    /**\n     * 属性列表，需要动态更新\n     */\n    get list() {\n        return this.$_list\n    }\n\n    /**\n     * 设置属性\n     */\n    set(name, value) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            map.id = value\n        } else if (name === 'class' || (element.tagName === 'WX-COMPONENT' && name === 'className')) {\n            element.className = value\n        } else if (name === 'style') {\n            element.style.cssText = value\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            element.dataset[datasetName] = value\n        } else {\n            const config = cache.getConfig()\n\n            // 判断 value 是否需要删减\n            if (typeof value === 'string' && config.optimization.attrValueReduce && value.length > config.optimization.attrValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.attrValueReduce}`)\n                value = ''\n            }\n\n            map[name] = value\n\n            // canvas 如果有 node 对象，需要将 width/height 设置进去\n            if ((name === 'width' || name === 'height') && element.tagName === 'CANVAS' && element.$$node) {\n                element.$$node[name] = value\n            }\n\n            // 其他字段的设置需要触发父组件更新\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 取属性\n     */\n    get(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return map.id || ''\n        } if (name === 'class') {\n            return element.className\n        } else if (name === 'style') {\n            return element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return undefined\n            return element.dataset[datasetName]\n        } else {\n            return map[name]\n        }\n    }\n\n    /**\n     * 判断属性是否存在\n     */\n    has(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return !!element.id\n        } else if (name === 'class') {\n            return !!element.className\n        } else if (name === 'style') {\n            return !!element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return false\n            return Object.prototype.hasOwnProperty.call(element.dataset, datasetName)\n        } else {\n            return Object.prototype.hasOwnProperty.call(map, name)\n        }\n    }\n\n    /**\n     * 删除属性\n     */\n    remove(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            element.id = ''\n        } else if (name === 'class' || name === 'style') {\n            this.set(name, '')\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (element.$__dataset) delete element.dataset[datasetName]\n        } else {\n            // 其他字段的设置需要触发父组件更新\n            delete map[name]\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 更新属性列表\n     */\n    triggerUpdate() {\n        const map = this.$_map\n        const list = this.$_list\n\n        // 清空旧的列表\n        list.forEach(item => {\n            delete list[item.name]\n        })\n        delete list.class\n        delete list.style\n        list.length = 0\n\n        // 添加新列表\n        Object.keys(map).forEach(name => {\n            if (name !== 'id') {\n                const item = {name, value: map[name]}\n\n                list.push(item)\n                list[name] = item\n            }\n        })\n\n        const idValue = this.get('id')\n        const classValue = this.get('class')\n        const styleValue = this.get('style')\n        if (idValue) {\n            const item = {name: 'id', value: idValue}\n            list.push(item)\n            list.id = item\n        }\n        if (classValue) {\n            const item = {name: 'class', value: classValue}\n            list.push(item)\n            list.class = item\n        }\n        if (styleValue) {\n            const item = {name: 'style', value: styleValue}\n            list.push(item)\n            list.style = item\n        }\n    }\n}\n\nmodule.exports = Attribute\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass TextNode extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new TextNode(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'text'\n\n        super.$$init(options, tree)\n\n        this.$_content = options.content || ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_content = ''\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode) this.parentNode.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n            content: this.$_content,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#text'\n    }\n\n    get nodeType() {\n        return Node.TEXT_NODE\n    }\n\n    get nodeValue() {\n        return this.textContent\n    }\n\n    set nodeValue(value) {\n        this.textContent = value\n    }\n\n    get textContent() {\n        return this.$_content\n    }\n\n    set textContent(value) {\n        value += ''\n\n        this.$_content = value\n        this.$_triggerParentUpdate()\n    }\n\n    get data() {\n        return this.textContent\n    }\n\n    set data(value) {\n        this.textContent = value\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createTextNode({\n            content: this.$_content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = TextNode\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass Comment extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Comment(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'comment'\n\n        super.$$init(options, tree)\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#comment'\n    }\n\n    get nodeType() {\n        return Node.COMMENT_NODE\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = Comment\n","const tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst Window = require('./window')\nconst Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\n\nmodule.exports = {\n    createPage(route, config) {\n        if (config) cache.setConfig(config)\n\n        const pageId = `p-${tool.getId()}-/${route}`\n        const window = new Window(pageId)\n        const nodeIdMap = {}\n        const document = new Document(pageId, nodeIdMap)\n\n        cache.init(pageId, {\n            window,\n            document,\n            nodeIdMap,\n        })\n\n        return {\n            pageId,\n            window,\n            document,\n        }\n    },\n\n    destroyPage(pageId) {\n        cache.destroy(pageId)\n    },\n\n    // 开放给 miniprogram-element\n    $$adapter: {\n        cache,\n        EventTarget,\n        Event,\n        tool,\n    },\n}\n","const Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst OriginalCustomEvent = require('./event/custom-event')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst ClassList = require('./node/class-list')\nconst Style = require('./node/style')\nconst Attribute = require('./node/attribute')\nconst cache = require('./util/cache')\nconst tool = require('./util/tool')\n\nlet lastRafTime = 0\nconst WINDOW_PROTOTYPE_MAP = {\n    event: Event.prototype,\n}\nconst ELEMENT_PROTOTYPE_MAP = {\n    attribute: Attribute.prototype,\n    classList: ClassList.prototype,\n    style: Style.prototype,\n}\nconst subscribeMap = {}\nconst globalObject = {}\nfunction noop() {}\n\nclass Window extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        const timeOrigin = +new Date()\n\n        this.$_pageId = pageId\n\n        this.$_outerHeight = 0\n        this.$_outerWidth = 0\n        this.$_innerHeight = 0\n        this.$_innerWidth = 0\n\n        this.$_nowFetchingWebviewInfoPromise = null // 正在拉取 webview 端信息的 promise 实例\n\n        this.$_fetchDeviceInfo()\n        this.$_initInnerEvent()\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onhashchange = null\n\n        // HTMLElement 构造器\n        this.$_elementConstructor = function HTMLElement(...args) {\n            return Element.$$create(...args)\n        }\n\n        // CustomEvent 构造器\n        this.$_customEventConstructor = class CustomEvent extends OriginalCustomEvent {\n            constructor(name = '', options = {}) {\n                options.timeStamp = +new Date() - timeOrigin\n                super(name, options)\n            }\n        }\n\n        // react 环境兼容\n        this.HTMLIFrameElement = function() {}\n    }\n\n    /**\n     * 初始化内部事件\n     */\n    $_initInnerEvent() {\n        // 监听滚动事件\n        this.addEventListener('scroll', () => {\n            const document = this.document\n            // 记录最近一次滚动事件触发的时间戳\n            if (document) document.documentElement.$$scrollTimeStamp = +new Date()\n        })\n    }\n\n    /**\n     * 拉取设备参数\n     */\n    $_fetchDeviceInfo() {\n        try {\n            const info = wx.getSystemInfoSync()\n\n            this.$_outerHeight = info.screenHeight\n            this.$_outerWidth = info.screenWidth\n            this.$_innerHeight = info.windowHeight\n            this.$_innerWidth = info.windowWidth\n\n            this.$_screen.$$reset(info)\n            this.$_navigator.$$reset(info)\n        } catch (err) {\n            // ignore\n        }\n    }\n\n    /**\n     * 拉取处理切面必要的信息\n     */\n    $_getAspectInfo(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n        let method = descriptor[1]\n        let type = descriptor[2]\n        let prototype\n\n        // 找出对象原型\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                prototype = WINDOW_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Window.prototype\n            }\n        } else if (main === 'document') {\n            prototype = Document.prototype\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                prototype = ELEMENT_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Element.prototype\n            }\n        } else if (main === 'textNode') {\n            prototype = TextNode.prototype\n        } else if (main === 'comment') {\n            prototype = Comment.prototype\n        }\n\n        return {prototype, method, type}\n    }\n\n    /**\n     * 暴露给小程序用的对象\n     */\n    get $$miniprogram() {\n        return this.$_miniprogram\n    }\n\n    /**\n     * 获取全局共享对象\n     */\n    get $$global() {\n        return globalObject\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        const pageId = this.$_pageId\n\n        Object.keys(subscribeMap).forEach(name => {\n            const handlersMap = subscribeMap[name]\n            if (handlersMap[pageId]) handlersMap[pageId] = null\n        })\n    }\n\n    /**\n     * 小程序端的 getComputedStyle 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.fields.html\n     */\n    $$getComputedStyle(dom, computedStyle = []) {\n        tool.flushThrottleCache() // 先清空 setData\n        return new Promise((resolve, reject) => {\n            if (dom.tagName === 'BODY') {\n                this.$$createSelectorQuery().select('.miniprogram-root').fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            } else {\n                this.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${dom.$$nodeId}`).fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 强制清空 setData 缓存\n     */\n    $$forceRender() {\n        tool.flushThrottleCache()\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options = {}) {\n        if (eventName === 'error' && typeof options.event === 'string') {\n            // 此处触发自 App.onError 钩子\n            const errStack = options.event\n            const errLines = errStack.split('\\n')\n            let message = ''\n            for (let i = 0, len = errLines.length; i < len; i++) {\n                const line = errLines[i]\n                if (line.trim().indexOf('at') !== 0) {\n                    message += (line + '\\n')\n                } else {\n                    break\n                }\n            }\n\n            const error = new Error(message)\n            error.stack = errStack\n            options.event = new this.$_customEventConstructor('error', {\n                target: this,\n                $$extra: {\n                    message,\n                    filename: '',\n                    lineno: 0,\n                    colno: 0,\n                    error,\n                },\n            })\n            options.args = [message, error]\n\n            // window.onerror 比较特殊，需要调整参数\n            if (typeof this.onerror === 'function' && !this.onerror.$$isOfficial) {\n                const oldOnError = this.onerror\n                this.onerror = (event, message, error) => {\n                    oldOnError.call(this, message, '', 0, 0, error)\n                }\n                this.onerror.$$isOfficial = true // 标记为官方封装的方法\n            }\n        }\n\n        super.$$trigger(eventName, options)\n    }\n\n    /**\n     * 获取原型\n     */\n    $$getPrototype(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                return WINDOW_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Window.prototype\n            }\n        } else if (main === 'document') {\n            if (!sub) {\n                return Document.prototype\n            }\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                return ELEMENT_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Element.prototype\n            }\n        } else if (main === 'textNode') {\n            if (!sub) {\n                return TextNode.prototype\n            }\n        } else if (main === 'comment') {\n            if (!sub) {\n                return Comment.prototype\n            }\n        }\n    }\n\n    /**\n     * 扩展 dom/bom 对象\n     */\n    $$extend(descriptor, options) {\n        if (!descriptor || !options || typeof descriptor !== 'string' || typeof options !== 'object') return\n\n        const prototype = this.$$getPrototype(descriptor)\n        const keys = Object.keys(options)\n\n        if (prototype) keys.forEach(key => prototype[key] = options[key])\n    }\n\n    /**\n     * 对 dom/bom 对象方法追加切面方法\n     */\n    $$addAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function') return\n\n            // 重写原始方法\n            if (!methodInPrototype.$$isHook) {\n                prototype[method] = function(...args) {\n                    const beforeFuncs = prototype[method].$$before || []\n                    const afterFuncs = prototype[method].$$after || []\n\n                    if (beforeFuncs.length) {\n                        for (const beforeFunc of beforeFuncs) {\n                            const isStop = beforeFunc.apply(this, args)\n                            if (isStop) return\n                        }\n                    }\n\n                    const res = methodInPrototype.apply(this, args)\n\n                    if (afterFuncs.length) {\n                        for (const afterFunc of afterFuncs) {\n                            afterFunc.call(this, res)\n                        }\n                    }\n\n                    return res\n                }\n                prototype[method].$$isHook = true\n                prototype[method].$$originalMethod = methodInPrototype\n            }\n\n            // 追加切面方法\n            if (type === 'before') {\n                prototype[method].$$before = prototype[method].$$before || []\n                prototype[method].$$before.push(func)\n            } else if (type === 'after') {\n                prototype[method].$$after = prototype[method].$$after || []\n                prototype[method].$$after.push(func)\n            }\n        }\n    }\n\n    /**\n     * 删除对 dom/bom 对象方法追加前置/后置处理\n     */\n    $$removeAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function' || !methodInPrototype.$$isHook) return\n\n            // 移除切面方法\n            if (type === 'before' && methodInPrototype.$$before) {\n                methodInPrototype.$$before.splice(methodInPrototype.$$before.indexOf(func), 1)\n            } else if (type === 'after' && methodInPrototype.$$after) {\n                methodInPrototype.$$after.splice(methodInPrototype.$$after.indexOf(func), 1)\n            }\n\n            if ((!methodInPrototype.$$before || !methodInPrototype.$$before.length) && (!methodInPrototype.$$after || !methodInPrototype.$$after.length)) {\n                prototype[method] = methodInPrototype.$$originalMethod\n            }\n        }\n    }\n\n    /**\n     * 订阅广播事件\n     */\n    $$subscribe(name, handler) {\n        if (typeof name !== 'string' || typeof handler !== 'function') return\n\n        const pageId = this.$_pageId\n        subscribeMap[name] = subscribeMap[name] || {}\n        subscribeMap[name][pageId] = subscribeMap[name][pageId] || []\n        subscribeMap[name][pageId].push(handler)\n    }\n\n    /**\n     * 取消订阅广播事件\n     */\n    $$unsubscribe(name, handler) {\n        const pageId = this.$_pageId\n\n        if (typeof name !== 'string' || !subscribeMap[name] || !subscribeMap[name][pageId]) return\n\n        const handlers = subscribeMap[name][pageId]\n        if (!handler) {\n            // 取消所有 handler 的订阅\n            handlers.length = 0\n        } else if (typeof handler === 'function') {\n            const index = handlers.indexOf(handler)\n            if (index !== -1) handlers.splice(index, 1)\n        }\n    }\n\n    /**\n     * 发布广播事件\n     */\n    $$publish(name, data) {\n        if (typeof name !== 'string' || !subscribeMap[name]) return\n\n        Object.keys(subscribeMap[name]).forEach(pageId => {\n            const handlers = subscribeMap[name][pageId]\n            if (handlers && handlers.length) {\n                handlers.forEach(handler => {\n                    if (typeof handler !== 'function') return\n\n                    try {\n                        handler.call(null, data)\n                    } catch (err) {\n                        console.error(err)\n                    }\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get location() {\n        return this.$_location\n    }\n\n    set location(href) {\n        this.$_location.href = href\n    }\n\n    get navigator() {\n        return this.$_navigator\n    }\n\n    get CustomEvent() {\n        return this.$_customEventConstructor\n    }\n\n    get Event() {\n        return Event\n    }\n\n    get self() {\n        return this\n    }\n\n    get localStorage() {\n        return this.$_localStorage\n    }\n\n    get sessionStorage() {\n        return this.$_sessionStorage\n    }\n\n    get screen() {\n        return this.$_screen\n    }\n\n    get history() {\n        return this.$_history\n    }\n\n    get outerHeight() {\n        return this.$_outerHeight\n    }\n\n    get outerWidth() {\n        return this.$_outerWidth\n    }\n\n    get innerHeight() {\n        return this.$_innerHeight\n    }\n\n    get innerWidth() {\n        return this.$_innerWidth\n    }\n\n    get Image() {\n        return this.document ? this.document.$$imageConstructor : noop\n    }\n\n    get setTimeout() {\n        return setTimeout.bind(null)\n    }\n\n    get clearTimeout() {\n        return clearTimeout.bind(null)\n    }\n\n    get setInterval() {\n        return setInterval.bind(null)\n    }\n\n    get clearInterval() {\n        return clearInterval.bind(null)\n    }\n\n    get HTMLElement() {\n        return this.$_elementConstructor\n    }\n\n    get Element() {\n        return Element\n    }\n\n    get Node() {\n        return Node\n    }\n\n    get RegExp() {\n        return RegExp\n    }\n\n    get Math() {\n        return Math\n    }\n\n    get Number() {\n        return Number\n    }\n\n    get Boolean() {\n        return Boolean\n    }\n\n    get String() {\n        return String\n    }\n\n    get Date() {\n        return Date\n    }\n\n    get Symbol() {\n        return Symbol\n    }\n\n    get parseInt() {\n        return parseInt\n    }\n\n    get parseFloat() {\n        return parseFloat\n    }\n\n    get console() {\n        return console\n    }\n\n    get performance() {\n        return this.$_performance\n    }\n\n    get SVGElement() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.SVGElement is not supported')\n        return function() {}\n    }\n\n    get XMLHttpRequest() {\n        return this.$_xmlHttpRequestConstructor\n    }\n\n    get Worker() {\n        return this.$_workerConstructor\n    }\n\n    get SharedWorker() {\n        return this.$_sharedWorkerConstructor\n    }\n\n    get devicePixelRatio() {\n        return wx.getSystemInfoSync().pixelRatio\n    }\n\n    open(url) {\n        // 不支持 windowName 和 windowFeatures\n        this.location.$$open(url)\n    }\n\n    close() {\n        wx.navigateBack({\n            delta: 1,\n        })\n    }\n\n    getComputedStyle() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.getComputedStyle is not supported, please use window.$$getComputedStyle instead of it')\n        return {\n            // vue transition 组件使用\n            transitionDelay: '',\n            transitionDuration: '',\n            animationDelay: '',\n            animationDuration: '',\n        }\n    }\n\n    requestAnimationFrame(callback) {\n        if (typeof callback !== 'function') return\n\n        const now = new Date()\n        const nextRafTime = Math.max(lastRafTime + 16, now)\n        return setTimeout(() => {\n            callback(nextRafTime)\n            lastRafTime = nextRafTime\n        }, nextRafTime - now)\n    }\n\n    cancelAnimationFrame(timeId) {\n        return clearTimeout(timeId)\n    }\n\n    // 引入 polyfill 实现可能会引发内存泄漏\n    setImmediate(callback, ...args) {\n        if (typeof callback !== 'function') return\n        return setTimeout(callback, 0, ...args)\n    }\n\n    // 引入 polyfill 实现可能会引发内存泄漏\n    clearImmediate(timeId) {\n        return clearTimeout(timeId)\n    }\n}\n\nmodule.exports = Window\n","const tool = require('../util/tool')\n\n/**\n * 遍历 dom 树，收集类和标签对应的节点列表\n */\nfunction walkDomTree(node, cache) {\n    const tagMap = cache.tagMap = cache.tagMap || {}\n    const classMap = cache.classMap = cache.classMap || {}\n    const {tagName, classList} = node\n\n    // 标签\n    tagMap[tagName] = tagMap[tagName] || []\n    tagMap[tagName].push(node)\n\n    // 类\n    for (const className of classList) {\n        classMap[className] = classMap[className] || []\n        classMap[className].push(node)\n    }\n\n    const children = node.children || []\n\n    for (const child of children) {\n        // 递归遍历\n        walkDomTree(child, cache)\n    }\n}\n\nclass Tree {\n    constructor(pageId, root, nodeIdMap, document) {\n        this.pageId = pageId\n        this.root = document.$$createElement(root, this)\n        this.nodeIdMap = nodeIdMap\n        this.idMap = {}\n        this.document = document\n\n        if (nodeIdMap) nodeIdMap[root.nodeId] = this.root\n\n        this.walk(root, this.root)\n    }\n\n    /**\n     * 遍历 ast\n     */\n    walk(ast, parentNode) {\n        const children = ast.children\n        const idMap = this.idMap\n        const nodeIdMap = this.nodeIdMap\n        const document = this.document\n\n        if (!children || !children.length) return\n\n        // 遍历子节点\n        for (const child of children) {\n            let childNode\n\n            if (child.type === 'element') {\n                childNode = document.$$createElement(child, this)\n            } else if (child.type === 'text') {\n                childNode = document.$$createTextNode(child, this)\n            }\n\n            // 处理 id 缓存\n            const id = childNode.id\n            if (id && !idMap[id]) {\n                idMap[id] = childNode\n            }\n\n            // 处理 nodeId 缓存\n            if (nodeIdMap) nodeIdMap[child.nodeId] = childNode\n\n            // 插入子节点\n            parentNode.appendChild(childNode)\n\n            // 遍历子节点的 ast\n            this.walk(child, childNode)\n        }\n    }\n\n    /**\n     * 更新 idMap\n     */\n    updateIdMap(id, node) {\n        this.idMap[id] = node\n    }\n\n    /**\n     * 根据 id 获取节点\n     */\n    getById(id) {\n        return this.idMap[id]\n    }\n\n    /**\n     * 根据标签名获取节点列表\n     */\n    getByTagName(tagName, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        if (tool.checkIsWxComponent(tagName.toLowerCase(), false)) {\n            // 内置组件\n            tagName = tagName.toLowerCase().slice(3)\n            return (cache.tagMap['WX-COMPONENT'] || []).filter(findNode => findNode.behavior === tagName)\n        }\n\n        return cache.tagMap[tagName.toUpperCase()] || []\n    }\n\n    /**\n     * 根据类名获取节点列表\n     */\n    getByClassName(className, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return cache.classMap[className] || []\n    }\n}\n\nmodule.exports = Tree\n","/**\n * 支持的样式属性列表，默认只包含常用的样式属性\n */\n\nmodule.exports = [\n    'position', 'top', 'bottom', 'right', 'left', 'float', 'clear',\n    'display', 'width', 'height', 'maxHeight', 'maxWidth', 'minHeight', 'minWidth', 'flex', 'flexBasis', 'flexGrow', 'flexShrink', 'flexDirection', 'flexWrap', 'justifyContent', 'alignItems', 'order',\n    'padding', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n    'margin', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop',\n\n    'background', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundRepeat', 'backgroundSize',\n    'border', 'borderRadius', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderBottomStyle', 'borderBottomWidth', 'borderCollapse', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderTopStyle', 'borderTopWidth',\n    'borderTop', 'borderBottom', 'borderRight', 'borderLeft',\n    'outline', 'borderWidth', 'borderStyle', 'borderColor',\n\n    'animation', 'animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction',\n    'transition', 'transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction',\n    'transform', 'transformOrigin', 'perspective', 'perspectiveOrigin', 'backfaceVisibility',\n\n    'font', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight',\n    'color', 'textAlign', 'textDecoration', 'textIndent', 'textRendering', 'textShadow', 'textOverflow', 'textTransform',\n    'wordBreak', 'wordSpacing', 'wordWrap', 'lineHeight', 'letterSpacing', 'whiteSpace', 'userSelect',\n\n    'visibility', 'opacity', 'zIndex', 'zoom', 'overflow', 'overflowX', 'overflowY',\n    'boxShadow', 'boxSizing', 'content', 'cursor', 'direction', 'listStyle', 'objectFit', 'pointerEvents', 'resize', 'verticalAlign', 'willChange', 'clip', 'clipPath', 'fill',\n\n    'touchAction', 'WebkitAppearance', 'mask', 'WebkitMask'\n]\n","const Element = require('../element')\nconst cache = require('../../util/cache')\nconst Pool = require('../../util/pool')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLAnchorElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLAnchorElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        this.$_protocol = 'http:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_protocol = null\n        this.$_hostname = null\n        this.$_port = null\n        this.$_pathname = null\n        this.$_search = null\n        this.$_hash = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const href = node.href\n        if (href) html += ` href=\"${tool.escapeForHtmlGeneration(href)}\"`\n\n        const target = node.target\n        if (target) html += ` target=\"${tool.escapeForHtmlGeneration(target)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.href = node.href || ''\n        this.target = node.target || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            href: this.href,\n            target: this.target,\n        }\n    }\n\n    get protocol() {\n        return this.$_protocol\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    get target() {\n        return this.$_attrs.get('target')\n    }\n\n    set target(value) {\n        value = '' + value\n        this.$_attrs.set('target', value)\n    }\n}\n\nmodule.exports = HTMLAnchorElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass Image extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Image(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_naturalWidth = 0\n        this.$_naturalHeight = 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_naturalWidth = null\n        this.$_naturalHeight = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = this.$_attrs.get('width')\n        const height = this.$_attrs.get('height')\n\n        const widthNum = +width\n        if (!isNaN(+widthNum) && +widthNum >= 0) this.$_style.width = `${width}px`\n        else if (width && typeof width === 'string') this.$_style.width = width // 可能设置 width=\"100%\"\n\n        const heightNum = +height\n        if (!isNaN(+heightNum) && +heightNum >= 0) this.$_style.height = `${height}px`\n        else if (height && typeof height === 'string') this.$_style.height = height // 可能设置 width=\"100%\"\n    }\n\n    /**\n     * 重置长宽\n     */\n    $_resetRect(rect = {}) {\n        this.$_naturalWidth = rect.width || 0\n        this.$_naturalHeight = rect.height || 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get src() {\n        return this.$_attrs.get('src') || ''\n    }\n\n    get width() {\n        return parseFloat(this.$_attrs.get('width'), 10) || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('width', value)\n        this.$_initRect()\n    }\n\n    get height() {\n        return parseFloat(this.$_attrs.get('height'), 10) || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('height', value)\n        this.$_initRect()\n    }\n\n    get naturalWidth() {\n        return this.$_naturalWidth\n    }\n\n    get naturalHeight() {\n        return this.$_naturalHeight\n    }\n}\n\nmodule.exports = Image\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLInputElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLInputElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const type = node.type\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\n\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        const maxlength = node.maxlength\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\n\n        const placeholder = node.placeholder\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.type = node.type || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.maxlength = node.maxlength\n        this.placeholder = node.placeholder || ''\n\n        // 特殊字段\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            type: this.type,\n            value: this.value,\n            disabled: this.disabled,\n            maxlength: this.maxlength,\n            placeholder: this.placeholder,\n\n            // 特殊字段\n            mpplaceholderclass: this.mpplaceholderclass,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        this.$_attrs.set('name', value)\n    }\n\n    get type() {\n        return this.$_attrs.get('type') || 'text'\n    }\n\n    set type(value) {\n        value = '' + value\n        this.$_attrs.set('type', value)\n    }\n\n    get value() {\n        const type = this.$_attrs.get('type')\n        const value = this.$_attrs.get('value')\n\n        if ((type === 'radio' || type === 'checkbox') && value === undefined) return 'on'\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get maxlength() {\n        return this.$_attrs.get('maxlength')\n    }\n\n    set maxlength(value) {\n        this.$_attrs.set('maxlength', value)\n    }\n\n    get placeholder() {\n        return this.$_attrs.get('placeholder') || ''\n    }\n\n    set placeholder(value) {\n        value = '' + value\n        this.$_attrs.set('placeholder', value)\n    }\n\n    get autofocus() {\n        return !!this.$_attrs.get('autofocus')\n    }\n\n    set autofocus(value) {\n        value = !!value\n        this.$_attrs.set('autofocus', value)\n    }\n\n    set checked(value) {\n        this.$_attrs.set('checked', value)\n    }\n\n    get checked() {\n        return this.$_attrs.get('checked') || ''\n    }\n\n    focus() {\n        this.$_attrs.set('focus', true)\n    }\n\n    blur() {\n        this.$_attrs.set('focus', false)\n    }\n}\n\nmodule.exports = HTMLInputElement\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLTextAreaElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLTextAreaElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\r\n     */\r\n    $$dealWithAttrsForGenerateHtml(html, node) {\r\n        const type = node.type\r\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\r\n\r\n        const value = node.value\r\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\r\n\r\n        const disabled = node.disabled\r\n        if (disabled) html += ' disabled'\r\n\r\n        const maxlength = node.maxlength\r\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\r\n\r\n        const placeholder = node.placeholder\r\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder.replace(/\"/g, '\\\\\"'))}\"`\r\n\r\n        return html\r\n    }\r\n\r\n    /**\r\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForOuterHTML(node) {\r\n        this.name = node.name || ''\r\n        this.type = node.type || ''\r\n        this.value = node.value || ''\r\n        this.disabled = !!node.disabled\r\n        this.maxlength = node.maxlength\r\n        this.placeholder = node.placeholder || ''\r\n\r\n        // 特殊字段\r\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\r\n    }\r\n\r\n    /**\r\n     * 调用 cloneNode 接口时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForCloneNode() {\r\n        return {\r\n            type: this.type,\r\n            value: this.value,\r\n            disabled: this.disabled,\r\n            maxlength: this.maxlength,\r\n            placeholder: this.placeholder,\r\n\r\n            // 特殊字段\r\n            mpplaceholderclass: this.mpplaceholderclass,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get type() {\r\n        return this.$_attrs.get('type') || 'textarea'\r\n    }\r\n\r\n    set type(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('type', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get disabled() {\r\n        return !!this.$_attrs.get('disabled')\r\n    }\r\n\r\n    set disabled(value) {\r\n        value = !!value\r\n        this.$_attrs.set('disabled', value)\r\n    }\r\n\r\n    get maxlength() {\r\n        return this.$_attrs.get('maxlength')\r\n    }\r\n\r\n    set maxlength(value) {\r\n        this.$_attrs.set('maxlength', value)\r\n    }\r\n\r\n    get placeholder() {\r\n        return this.$_attrs.get('placeholder') || ''\r\n    }\r\n\r\n    set placeholder(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('placeholder', value)\r\n    }\r\n\r\n    get autofocus() {\r\n        return !!this.$_attrs.get('autofocus')\r\n    }\r\n\r\n    set autofocus(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autofocus', value)\r\n    }\r\n\r\n    get selectionStart() {\r\n        const value = +this.$_attrs.get('selection-start')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionStart(value) {\r\n        this.$_attrs.set('selection-start', value)\r\n    }\r\n\r\n    get selectionEnd() {\r\n        const value = +this.$_attrs.get('selection-end')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionEnd(value) {\r\n        this.$_attrs.set('selection-end', value)\r\n    }\r\n\r\n    focus() {\r\n        this.$_attrs.set('focus', true)\r\n    }\r\n\r\n    blur() {\r\n        this.$_attrs.set('focus', false)\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLTextAreaElement\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLVideoElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLVideoElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        const width = options.width\r\n        const height = options.height\r\n\r\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\r\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\r\n\r\n        super.$$init(options, tree)\r\n\r\n        this.$_initRect()\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新父组件树\r\n     */\r\n    $_triggerParentUpdate() {\r\n        this.$_initRect()\r\n        super.$_triggerParentUpdate()\r\n    }\r\n\r\n    /**\r\n     * 初始化长宽\r\n     */\r\n    $_initRect() {\r\n        const width = parseInt(this.$_attrs.get('width'), 10)\r\n        const height = parseInt(this.$_attrs.get('height'), 10)\r\n\r\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\r\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get src() {\r\n        return this.$_attrs.get('src') || ''\r\n    }\r\n\r\n    set src(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('src', value)\r\n    }\r\n\r\n    get width() {\r\n        return +this.$_attrs.get('width') || 0\r\n    }\r\n\r\n    set width(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('width', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get height() {\r\n        return +this.$_attrs.get('height') || 0\r\n    }\r\n\r\n    set height(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('height', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get autoplay() {\r\n        return !!this.$_attrs.get('autoplay')\r\n    }\r\n\r\n    set autoplay(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autoplay', value)\r\n    }\r\n\r\n    get loop() {\r\n        return !!this.$_attrs.get('loop')\r\n    }\r\n\r\n    set loop(value) {\r\n        value = !!value\r\n        this.$_attrs.set('loop', value)\r\n    }\r\n\r\n    get muted() {\r\n        return !!this.$_attrs.get('muted')\r\n    }\r\n\r\n    set muted(value) {\r\n        value = !!value\r\n        this.$_attrs.set('muted', value)\r\n    }\r\n\r\n    get controls() {\r\n        const value = this.$_attrs.get('controls')\r\n        return value !== undefined ? !!value : true\r\n    }\r\n\r\n    set controls(value) {\r\n        this.$_attrs.set('controls', value)\r\n    }\r\n\r\n    get poster() {\r\n        return this.$_attrs.get('poster')\r\n    }\r\n\r\n    set poster(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('poster', value)\r\n    }\r\n\r\n    get currentTime() {\r\n        return +this.$_attrs.get('currentTime') || 0\r\n    }\r\n\r\n    get buffered() {\r\n        return this.$_attrs.get('buffered')\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLVideoElement\r\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass HTMLCanvasElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLCanvasElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_node = null\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 准备 canvas 节点\n     */\n    $$prepare() {\n        return new Promise((resolve, reject) => {\n            this.$$getNodesRef().then(nodesRef => nodesRef.node(res => {\n                const {width, height} = this\n                this.$_node = res.node\n\n                // 设置 canvas 宽高\n                this.$_node.width = width\n                this.$_node.height = height\n\n                resolve(this)\n            }).exec()).catch(reject)\n        })\n    }\n\n    get $$node() {\n        return this.$_node\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) {\n            this.$_style.width = `${width}px`\n        }\n        if (typeof height === 'number' && height >= 0) {\n            this.$_style.height = `${height}px`\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        if (this.$_node) return this.$_node.width\n        else return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        value = parseFloat(value)\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.width = value\n        else this.$_attrs.set('width', value)\n    }\n\n    get height() {\n        if (this.$_node) return this.$_node.height\n        else return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        value = parseFloat(value)\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.height = value\n        else this.$_attrs.set('height', value)\n    }\n\n    getContext(type) {\n        if (!this.$_node) {\n            console.warn('canvas is not prepared, please call $$prepare method first')\n            return\n        }\n        return this.$_node.getContext(type)\n    }\n\n    createPath2D(...args) {\n        return this.$_node.createPath2D(...args)\n    }\n\n    createImage(...args) {\n        return this.$_node.createImage(...args)\n    }\n\n    createImageData(...args) {\n        return this.$_node.createImageData(...args)\n    }\n\n    requestAnimationFrame(...args) {\n        return this.$_node.requestAnimationFrame(...args)\n    }\n\n    cancelAnimationFrame(...args) {\n        return this.$_node.cancelAnimationFrame(...args)\n    }\n\n    toDataURL(...args) {\n        return this.$_node.toDataURL(...args)\n    }\n}\n\nmodule.exports = HTMLCanvasElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLSelectElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLSelectElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n        this.$$resetOptions()\n    }\n\n    /**\n     * 重置 options 显示\n     */\n    $$resetOptions() {\n        const value = this.value\n\n        if (value !== undefined) {\n            this.options.forEach(child => child.$$updateSelected(child.value === value))\n        } else {\n            this.options.forEach((child, index) => child.$$updateSelected(index === 0))\n        }\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selectedIndex = node.selectedIndex || 0\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            value: this.value,\n            disabled: this.disabled,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        return this.$_attrs.set('name', value)\n    }\n\n    get value() {\n        let value = this.$_attrs.get('value')\n        if (value === undefined) {\n            // 没有设置 value 的时候，取 options 中被选中那项的 value\n            const option = this.options.find(option => !!option.selected)\n            if (option) {\n                value = option.value\n                this.$$setAttributeWithoutUpdate('value', value)\n            }\n        }\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n\n        this.$_attrs.set('value', value)\n\n        // 同步更新 selectedIndex 属性\n        this.$_attrs.set('selectedIndex', this.options.findIndex(option => option.value === value))\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get selectedIndex() {\n        return +this.$_attrs.get('selectedIndex')\n    }\n\n    set selectedIndex(value) {\n        value = +value\n\n        this.$_attrs.set('selectedIndex', value)\n\n        // 同步更新 value 属性\n        this.$_attrs.set('value', this.options[value] && this.options[value].value || '')\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get options() {\n        // 只考虑儿子节点中的 option\n        return this.$_children.filter(child => child.tagName === 'OPTION' && !child.disabled)\n    }\n}\n\nmodule.exports = HTMLSelectElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLOptionElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLOptionElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.tool.escapeForHtmlGeneration(value)}\"`\n\n        const label = node.label\n        if (label) html += ` label=\"${tool.tool.escapeForHtmlGeneration(label)}\"`\n\n        const selected = node.selected\n        if (selected) html += ' selected'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.label = node.label || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selected = !!node.selected\n    }\n\n    /**\n     * 更新 selected，不触发 select 的更新\n     */\n    $$updateSelected(value) {\n        value = !!value\n        this.$_attrs.set('selected', value)\n    }\n\n    get label() {\n        return this.$_attrs.get('label') || this.textContent\n    }\n\n    set label(value) {\n        value = '' + value\n        this.$_attrs.set('label', value)\n    }\n\n    get value() {\n        const value = this.$_attrs.get('value')\n        return value !== undefined ? value : this.label\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    set selected(value) {\n        this.$$updateSelected(value)\n\n        // 同步更新 select 的 selectedIndex 和 value，只考虑父亲节点中 select\n        const parentNode = this.parentNode\n        if (parentNode && parentNode.tagName === 'SELECT') {\n            parentNode.value = this.value\n        }\n    }\n\n    get selected() {\n        return !!this.$_attrs.get('selected')\n    }\n}\n\nmodule.exports = HTMLOptionElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass NotSupport extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new NotSupport(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        // 处理特殊节点\n        const window = cache.getWindow(this.$_pageId)\n        if (window.onDealWithNotSupportDom) window.onDealWithNotSupportDom(this)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    get behavior() {\n        return 'not-support'\n    }\n}\n\nmodule.exports = NotSupport\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_attrs.get('behavior') || ''\r\n    }\r\n\r\n    set behavior(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('behavior', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get scrollTop() {\r\n        return this.$_attrs.get('scroll-top') || 0\r\n    }\r\n\r\n    set scrollTop(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-top', value)\r\n        }\r\n    }\r\n\r\n    get scrollLeft() {\r\n        return this.$_attrs.get('scroll-left') || 0\r\n    }\r\n\r\n    set scrollLeft(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-left', value)\r\n        }\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        super.setAttribute(name, value)\r\n\r\n        if (name === 'scroll-into-view') {\r\n            // TODO：scroll-into-view 先转成 scroll-top 来处理，等基础库支持\r\n            tool.flushThrottleCache() // 先清空 setData\r\n            Promise.resolve().then(() => {\r\n                const scrollItem = this.ownerDocument.getElementById(value)\r\n                if (!scrollItem) return\r\n\r\n                const propName = this.getAttribute('scroll-x') ? 'scroll-left' : this.getAttribute('scroll-y') ? 'scroll-top' : ''\r\n                if (!propName) return\r\n\r\n                const window = cache.getWindow(this.$_pageId)\r\n                Promise.all([\r\n                    new Promise(resolve => window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).fields({rect: true, scrollOffset: true}).exec(resolve)),\r\n                    scrollItem.$$getBoundingClientRect()\r\n                ]).then(res => {\r\n                    const rectName = propName === 'scroll-left' ? 'left' : 'top'\r\n                    const scrollRect = res[0][0]\r\n                    const itemRect = res[1]\r\n\r\n                    super.setAttribute(propName, itemRect[rectName] - scrollRect[rectName] + scrollRect[tool.toCamel(propName)])\r\n                }).catch(console.error)\r\n            }).catch(console.error)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxComponent\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxCustomComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxCustomComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        this.$_behavior = options.componentName\r\n\r\n        super.$$init(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$destroy 方法\r\n     */\r\n    $$destroy() {\r\n        super.$$destroy()\r\n\r\n        this.$_behavior = null\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_behavior\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        if (name.indexOf('kbone-func-') === 0) {\r\n            // 特殊属性，用于传入函数\r\n            const realName = name.slice('kbone-func-'.length)\r\n            if (typeof value === 'function') {\r\n                super.setAttribute(realName, value)\r\n            } else {\r\n                const window = cache.getWindow(this.$_pageId)\r\n                super.setAttribute(realName, window[value])\r\n            }\r\n        } else {\r\n            super.setAttribute(name, value)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxCustomComponent\r\n"],"sourceRoot":""}